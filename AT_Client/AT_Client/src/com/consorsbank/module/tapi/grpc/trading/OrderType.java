// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TradingTypes.proto

package com.consorsbank.module.tapi.grpc.trading;

/**
 * <pre>
 **
 * Order type represents different buy / sell order possibilities
 * </pre>
 *
 * Protobuf enum {@code com.consorsbank.module.tapi.grpc.OrderType}
 */
public enum OrderType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   **
   * Order type is not defined
   * </pre>
   *
   * <code>NO_ORDER_TYPE = 0;</code>
   */
  NO_ORDER_TYPE(0),
  /**
   * <pre>
   **
   * Buy order type
   * </pre>
   *
   * <code>BUY = 1;</code>
   */
  BUY(1),
  /**
   * <pre>
   **
   * Sell order type
   * </pre>
   *
   * <code>SELL = 2;</code>
   */
  SELL(2),
  /**
   * <pre>
   **
   * Short sell order type
   * </pre>
   *
   * <code>SHORT_SELL = 3;</code>
   */
  SHORT_SELL(3),
  /**
   * <pre>
   **
   * Short cover order type. This type is not allowed as input parameter
   * </pre>
   *
   * <code>SHORT_COVER = 4;</code>
   */
  SHORT_COVER(4),
  /**
   * <pre>
   **
   * Rorced cover order type. This type is not allowed as input parameter
   * </pre>
   *
   * <code>FORCED_COVER = 5;</code>
   */
  FORCED_COVER(5),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   **
   * Order type is not defined
   * </pre>
   *
   * <code>NO_ORDER_TYPE = 0;</code>
   */
  public static final int NO_ORDER_TYPE_VALUE = 0;
  /**
   * <pre>
   **
   * Buy order type
   * </pre>
   *
   * <code>BUY = 1;</code>
   */
  public static final int BUY_VALUE = 1;
  /**
   * <pre>
   **
   * Sell order type
   * </pre>
   *
   * <code>SELL = 2;</code>
   */
  public static final int SELL_VALUE = 2;
  /**
   * <pre>
   **
   * Short sell order type
   * </pre>
   *
   * <code>SHORT_SELL = 3;</code>
   */
  public static final int SHORT_SELL_VALUE = 3;
  /**
   * <pre>
   **
   * Short cover order type. This type is not allowed as input parameter
   * </pre>
   *
   * <code>SHORT_COVER = 4;</code>
   */
  public static final int SHORT_COVER_VALUE = 4;
  /**
   * <pre>
   **
   * Rorced cover order type. This type is not allowed as input parameter
   * </pre>
   *
   * <code>FORCED_COVER = 5;</code>
   */
  public static final int FORCED_COVER_VALUE = 5;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static OrderType valueOf(int value) {
    return forNumber(value);
  }

  public static OrderType forNumber(int value) {
    switch (value) {
      case 0: return NO_ORDER_TYPE;
      case 1: return BUY;
      case 2: return SELL;
      case 3: return SHORT_SELL;
      case 4: return SHORT_COVER;
      case 5: return FORCED_COVER;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<OrderType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      OrderType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<OrderType>() {
          public OrderType findValueByNumber(int number) {
            return OrderType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.consorsbank.module.tapi.grpc.trading.TradingTypes.getDescriptor().getEnumTypes().get(1);
  }

  private static final OrderType[] VALUES = values();

  public static OrderType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private OrderType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.consorsbank.module.tapi.grpc.OrderType)
}

