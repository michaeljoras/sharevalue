// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SecurityService.proto

package com.consorsbank.module.tapi.grpc.security;

/**
 * <pre>
 **
 * Returns market data information
 * </pre>
 *
 * Protobuf type {@code com.consorsbank.module.tapi.grpc.SecurityMarketDataReply}
 */
public  final class SecurityMarketDataReply extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.consorsbank.module.tapi.grpc.SecurityMarketDataReply)
    SecurityMarketDataReplyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SecurityMarketDataReply.newBuilder() to construct.
  private SecurityMarketDataReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SecurityMarketDataReply() {
    changedFields_ = java.util.Collections.emptyList();
    currency_ = "";
    lastPrice_ = 0D;
    lastVolume_ = 0D;
    todayNumTrades_ = 0;
    todayVolume_ = 0D;
    askPrice_ = 0D;
    askVolume_ = 0D;
    bidPrice_ = 0D;
    bidVolume_ = 0D;
    previousPrice_ = 0D;
    relativeDiff_ = 0D;
    absDiff_ = 0D;
    highPrice_ = 0D;
    lowPrice_ = 0D;
    openPrice_ = 0D;
    weekHighPrice_ = 0D;
    weekLowPrice_ = 0D;
    monthHighPrice_ = 0D;
    monthLowPrice_ = 0D;
    yearHighPrice_ = 0D;
    yearLowPrice_ = 0D;
    lastAddendum_ = "";
    tradingPhase_ = 0;
    indicativePrice_ = 0D;
    prevalenceVolume_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SecurityMarketDataReply(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    int mutable_bitField1_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder subBuilder = null;
            if (securityWithStockexchange_ != null) {
              subBuilder = securityWithStockexchange_.toBuilder();
            }
            securityWithStockexchange_ = input.readMessage(com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(securityWithStockexchange_);
              securityWithStockexchange_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              changedFields_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000002;
            }
            changedFields_.add(rawValue);
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                changedFields_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              changedFields_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            currency_ = s;
            break;
          }
          case 33: {

            lastPrice_ = input.readDouble();
            break;
          }
          case 41: {

            lastVolume_ = input.readDouble();
            break;
          }
          case 50: {
            com.consorsbank.module.tapi.grpc.common.Timestamp.Builder subBuilder = null;
            if (lastDateTime_ != null) {
              subBuilder = lastDateTime_.toBuilder();
            }
            lastDateTime_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(lastDateTime_);
              lastDateTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {

            todayNumTrades_ = input.readInt32();
            break;
          }
          case 65: {

            todayVolume_ = input.readDouble();
            break;
          }
          case 73: {

            askPrice_ = input.readDouble();
            break;
          }
          case 81: {

            askVolume_ = input.readDouble();
            break;
          }
          case 90: {
            com.consorsbank.module.tapi.grpc.common.Timestamp.Builder subBuilder = null;
            if (askTime_ != null) {
              subBuilder = askTime_.toBuilder();
            }
            askTime_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(askTime_);
              askTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 97: {

            bidPrice_ = input.readDouble();
            break;
          }
          case 105: {

            bidVolume_ = input.readDouble();
            break;
          }
          case 114: {
            com.consorsbank.module.tapi.grpc.common.Timestamp.Builder subBuilder = null;
            if (bidTime_ != null) {
              subBuilder = bidTime_.toBuilder();
            }
            bidTime_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(bidTime_);
              bidTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 121: {

            previousPrice_ = input.readDouble();
            break;
          }
          case 130: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (previousDate_ != null) {
              subBuilder = previousDate_.toBuilder();
            }
            previousDate_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(previousDate_);
              previousDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 137: {

            relativeDiff_ = input.readDouble();
            break;
          }
          case 145: {

            absDiff_ = input.readDouble();
            break;
          }
          case 153: {

            highPrice_ = input.readDouble();
            break;
          }
          case 161: {

            lowPrice_ = input.readDouble();
            break;
          }
          case 169: {

            openPrice_ = input.readDouble();
            break;
          }
          case 177: {

            weekHighPrice_ = input.readDouble();
            break;
          }
          case 186: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateWeekHigh_ != null) {
              subBuilder = dateWeekHigh_.toBuilder();
            }
            dateWeekHigh_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateWeekHigh_);
              dateWeekHigh_ = subBuilder.buildPartial();
            }

            break;
          }
          case 193: {

            weekLowPrice_ = input.readDouble();
            break;
          }
          case 202: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateWeekLow_ != null) {
              subBuilder = dateWeekLow_.toBuilder();
            }
            dateWeekLow_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateWeekLow_);
              dateWeekLow_ = subBuilder.buildPartial();
            }

            break;
          }
          case 209: {

            monthHighPrice_ = input.readDouble();
            break;
          }
          case 218: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateMonthHigh_ != null) {
              subBuilder = dateMonthHigh_.toBuilder();
            }
            dateMonthHigh_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateMonthHigh_);
              dateMonthHigh_ = subBuilder.buildPartial();
            }

            break;
          }
          case 225: {

            monthLowPrice_ = input.readDouble();
            break;
          }
          case 234: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateMonthLow_ != null) {
              subBuilder = dateMonthLow_.toBuilder();
            }
            dateMonthLow_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateMonthLow_);
              dateMonthLow_ = subBuilder.buildPartial();
            }

            break;
          }
          case 241: {

            yearHighPrice_ = input.readDouble();
            break;
          }
          case 250: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateYearHigh_ != null) {
              subBuilder = dateYearHigh_.toBuilder();
            }
            dateYearHigh_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateYearHigh_);
              dateYearHigh_ = subBuilder.buildPartial();
            }

            break;
          }
          case 257: {

            yearLowPrice_ = input.readDouble();
            break;
          }
          case 266: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (dateYearLow_ != null) {
              subBuilder = dateYearLow_.toBuilder();
            }
            dateYearLow_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(dateYearLow_);
              dateYearLow_ = subBuilder.buildPartial();
            }

            break;
          }
          case 274: {
            java.lang.String s = input.readStringRequireUtf8();

            lastAddendum_ = s;
            break;
          }
          case 280: {
            int rawValue = input.readEnum();

            tradingPhase_ = rawValue;
            break;
          }
          case 289: {

            indicativePrice_ = input.readDouble();
            break;
          }
          case 297: {

            prevalenceVolume_ = input.readDouble();
            break;
          }
          case 8002: {
            com.consorsbank.module.tapi.grpc.common.Error.Builder subBuilder = null;
            if (error_ != null) {
              subBuilder = error_.toBuilder();
            }
            error_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Error.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(error_);
              error_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        changedFields_ = java.util.Collections.unmodifiableList(changedFields_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityMarketDataReply_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityMarketDataReply_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.class, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.Builder.class);
  }

  /**
   * <pre>
   **
   * SecurityChangedField represents information about changed fields during marked data event.
   * Not all field can be initialized. There are only changed fields. Some fields can be changed, but have undefined state
   * for example NaN.   
   * </pre>
   *
   * Protobuf enum {@code com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField}
   */
  public enum SecurityChangedField
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** No data
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     ** Price of the last trade  
     * </pre>
     *
     * <code>LAST_PRICE = 4;</code>
     */
    LAST_PRICE(4),
    /**
     * <pre>
     ** Volume last trade  
     * </pre>
     *
     * <code>LAST_VOLUME = 5;</code>
     */
    LAST_VOLUME(5),
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>LAST_DATE_TIME = 6;</code>
     */
    LAST_DATE_TIME(6),
    /**
     * <pre>
     ** Today number of tradings  
     * </pre>
     *
     * <code>TODAY_NUM_TRADES = 7;</code>
     */
    TODAY_NUM_TRADES(7),
    /**
     * <pre>
     ** Today volume 
     * </pre>
     *
     * <code>TODAY_VOLUME = 8;</code>
     */
    TODAY_VOLUME(8),
    /**
     * <pre>
     ** Last ask price 
     * </pre>
     *
     * <code>ASK_PRICE = 9;</code>
     */
    ASK_PRICE(9),
    /**
     * <pre>
     ** Volume last ask 
     * </pre>
     *
     * <code>ASK_VOLUME = 10;</code>
     */
    ASK_VOLUME(10),
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>ASK_TIME = 11;</code>
     */
    ASK_TIME(11),
    /**
     * <pre>
     ** Last bid price 
     * </pre>
     *
     * <code>BID_PRICE = 12;</code>
     */
    BID_PRICE(12),
    /**
     * <pre>
     ** Volume last bid 
     * </pre>
     *
     * <code>BID_VOLUME = 13;</code>
     */
    BID_VOLUME(13),
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>BID_TIME = 14;</code>
     */
    BID_TIME(14),
    /**
     * <pre>
     ** Quote of the previous trading day  
     * </pre>
     *
     * <code>PREVIOUS_PRICE = 15;</code>
     */
    PREVIOUS_PRICE(15),
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>PREVIOUS_DATE = 16;</code>
     */
    PREVIOUS_DATE(16),
    /**
     * <pre>
     ** Relative difference to the previous day  
     * </pre>
     *
     * <code>RELATIVE_DIFF = 17;</code>
     */
    RELATIVE_DIFF(17),
    /**
     * <pre>
     ** Absolute difference to the previous day 
     * </pre>
     *
     * <code>ABS_DIFF = 18;</code>
     */
    ABS_DIFF(18),
    /**
     * <pre>
     ** Highest price 
     * </pre>
     *
     * <code>HIGH_PRICE = 19;</code>
     */
    HIGH_PRICE(19),
    /**
     * <pre>
     ** Lowest price 
     * </pre>
     *
     * <code>LOW_PRICE = 20;</code>
     */
    LOW_PRICE(20),
    /**
     * <pre>
     ** Price at opening 
     * </pre>
     *
     * <code>OPEN_PRICE = 21;</code>
     */
    OPEN_PRICE(21),
    /**
     * <pre>
     ** Highest price of the previous week  
     * </pre>
     *
     * <code>WEEK_HIGH_PRICE = 22;</code>
     */
    WEEK_HIGH_PRICE(22),
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>DATE_WEEK_HIGH = 23;</code>
     */
    DATE_WEEK_HIGH(23),
    /**
     * <pre>
     ** Lowest price of the previous week  
     * </pre>
     *
     * <code>WEEK_LOW_PRICE = 24;</code>
     */
    WEEK_LOW_PRICE(24),
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>DATE_WEEK_LOW = 25;</code>
     */
    DATE_WEEK_LOW(25),
    /**
     * <pre>
     ** Highest price of the previous month  
     * </pre>
     *
     * <code>MONTH_HIGH_PRICE = 26;</code>
     */
    MONTH_HIGH_PRICE(26),
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>DATE_MONTH_HIGH = 27;</code>
     */
    DATE_MONTH_HIGH(27),
    /**
     * <pre>
     ** Lowest price of the previous month 
     * </pre>
     *
     * <code>MONTH_LOW_PRICE = 28;</code>
     */
    MONTH_LOW_PRICE(28),
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>DATE_MONTH_LOW = 29;</code>
     */
    DATE_MONTH_LOW(29),
    /**
     * <pre>
     ** Highest price of the current year  
     * </pre>
     *
     * <code>YEAR_HIGH_PRICE = 30;</code>
     */
    YEAR_HIGH_PRICE(30),
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>DATE_YEAR_HIGH = 31;</code>
     */
    DATE_YEAR_HIGH(31),
    /**
     * <pre>
     ** Lowest price of the current year 
     * </pre>
     *
     * <code>YEAR_LOW_PRICE = 32;</code>
     */
    YEAR_LOW_PRICE(32),
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>DATE_YEAR_LOW = 33;</code>
     */
    DATE_YEAR_LOW(33),
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>LAST_ADDENDUM = 34;</code>
     */
    LAST_ADDENDUM(34),
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>TRADING_PHASE = 35;</code>
     */
    TRADING_PHASE(35),
    /**
     * <pre>
     ** Indicative price 
     * </pre>
     *
     * <code>INDICATIVE_PRICE = 36;</code>
     */
    INDICATIVE_PRICE(36),
    /**
     * <pre>
     ** Trading volume corresponding to the last price 
     * </pre>
     *
     * <code>PREVALENCE_VOLUME = 37;</code>
     */
    PREVALENCE_VOLUME(37),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** No data
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     ** Price of the last trade  
     * </pre>
     *
     * <code>LAST_PRICE = 4;</code>
     */
    public static final int LAST_PRICE_VALUE = 4;
    /**
     * <pre>
     ** Volume last trade  
     * </pre>
     *
     * <code>LAST_VOLUME = 5;</code>
     */
    public static final int LAST_VOLUME_VALUE = 5;
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>LAST_DATE_TIME = 6;</code>
     */
    public static final int LAST_DATE_TIME_VALUE = 6;
    /**
     * <pre>
     ** Today number of tradings  
     * </pre>
     *
     * <code>TODAY_NUM_TRADES = 7;</code>
     */
    public static final int TODAY_NUM_TRADES_VALUE = 7;
    /**
     * <pre>
     ** Today volume 
     * </pre>
     *
     * <code>TODAY_VOLUME = 8;</code>
     */
    public static final int TODAY_VOLUME_VALUE = 8;
    /**
     * <pre>
     ** Last ask price 
     * </pre>
     *
     * <code>ASK_PRICE = 9;</code>
     */
    public static final int ASK_PRICE_VALUE = 9;
    /**
     * <pre>
     ** Volume last ask 
     * </pre>
     *
     * <code>ASK_VOLUME = 10;</code>
     */
    public static final int ASK_VOLUME_VALUE = 10;
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>ASK_TIME = 11;</code>
     */
    public static final int ASK_TIME_VALUE = 11;
    /**
     * <pre>
     ** Last bid price 
     * </pre>
     *
     * <code>BID_PRICE = 12;</code>
     */
    public static final int BID_PRICE_VALUE = 12;
    /**
     * <pre>
     ** Volume last bid 
     * </pre>
     *
     * <code>BID_VOLUME = 13;</code>
     */
    public static final int BID_VOLUME_VALUE = 13;
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>BID_TIME = 14;</code>
     */
    public static final int BID_TIME_VALUE = 14;
    /**
     * <pre>
     ** Quote of the previous trading day  
     * </pre>
     *
     * <code>PREVIOUS_PRICE = 15;</code>
     */
    public static final int PREVIOUS_PRICE_VALUE = 15;
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>PREVIOUS_DATE = 16;</code>
     */
    public static final int PREVIOUS_DATE_VALUE = 16;
    /**
     * <pre>
     ** Relative difference to the previous day  
     * </pre>
     *
     * <code>RELATIVE_DIFF = 17;</code>
     */
    public static final int RELATIVE_DIFF_VALUE = 17;
    /**
     * <pre>
     ** Absolute difference to the previous day 
     * </pre>
     *
     * <code>ABS_DIFF = 18;</code>
     */
    public static final int ABS_DIFF_VALUE = 18;
    /**
     * <pre>
     ** Highest price 
     * </pre>
     *
     * <code>HIGH_PRICE = 19;</code>
     */
    public static final int HIGH_PRICE_VALUE = 19;
    /**
     * <pre>
     ** Lowest price 
     * </pre>
     *
     * <code>LOW_PRICE = 20;</code>
     */
    public static final int LOW_PRICE_VALUE = 20;
    /**
     * <pre>
     ** Price at opening 
     * </pre>
     *
     * <code>OPEN_PRICE = 21;</code>
     */
    public static final int OPEN_PRICE_VALUE = 21;
    /**
     * <pre>
     ** Highest price of the previous week  
     * </pre>
     *
     * <code>WEEK_HIGH_PRICE = 22;</code>
     */
    public static final int WEEK_HIGH_PRICE_VALUE = 22;
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>DATE_WEEK_HIGH = 23;</code>
     */
    public static final int DATE_WEEK_HIGH_VALUE = 23;
    /**
     * <pre>
     ** Lowest price of the previous week  
     * </pre>
     *
     * <code>WEEK_LOW_PRICE = 24;</code>
     */
    public static final int WEEK_LOW_PRICE_VALUE = 24;
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>DATE_WEEK_LOW = 25;</code>
     */
    public static final int DATE_WEEK_LOW_VALUE = 25;
    /**
     * <pre>
     ** Highest price of the previous month  
     * </pre>
     *
     * <code>MONTH_HIGH_PRICE = 26;</code>
     */
    public static final int MONTH_HIGH_PRICE_VALUE = 26;
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>DATE_MONTH_HIGH = 27;</code>
     */
    public static final int DATE_MONTH_HIGH_VALUE = 27;
    /**
     * <pre>
     ** Lowest price of the previous month 
     * </pre>
     *
     * <code>MONTH_LOW_PRICE = 28;</code>
     */
    public static final int MONTH_LOW_PRICE_VALUE = 28;
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>DATE_MONTH_LOW = 29;</code>
     */
    public static final int DATE_MONTH_LOW_VALUE = 29;
    /**
     * <pre>
     ** Highest price of the current year  
     * </pre>
     *
     * <code>YEAR_HIGH_PRICE = 30;</code>
     */
    public static final int YEAR_HIGH_PRICE_VALUE = 30;
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>DATE_YEAR_HIGH = 31;</code>
     */
    public static final int DATE_YEAR_HIGH_VALUE = 31;
    /**
     * <pre>
     ** Lowest price of the current year 
     * </pre>
     *
     * <code>YEAR_LOW_PRICE = 32;</code>
     */
    public static final int YEAR_LOW_PRICE_VALUE = 32;
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>DATE_YEAR_LOW = 33;</code>
     */
    public static final int DATE_YEAR_LOW_VALUE = 33;
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>LAST_ADDENDUM = 34;</code>
     */
    public static final int LAST_ADDENDUM_VALUE = 34;
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>TRADING_PHASE = 35;</code>
     */
    public static final int TRADING_PHASE_VALUE = 35;
    /**
     * <pre>
     ** Indicative price 
     * </pre>
     *
     * <code>INDICATIVE_PRICE = 36;</code>
     */
    public static final int INDICATIVE_PRICE_VALUE = 36;
    /**
     * <pre>
     ** Trading volume corresponding to the last price 
     * </pre>
     *
     * <code>PREVALENCE_VOLUME = 37;</code>
     */
    public static final int PREVALENCE_VOLUME_VALUE = 37;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SecurityChangedField valueOf(int value) {
      return forNumber(value);
    }

    public static SecurityChangedField forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 4: return LAST_PRICE;
        case 5: return LAST_VOLUME;
        case 6: return LAST_DATE_TIME;
        case 7: return TODAY_NUM_TRADES;
        case 8: return TODAY_VOLUME;
        case 9: return ASK_PRICE;
        case 10: return ASK_VOLUME;
        case 11: return ASK_TIME;
        case 12: return BID_PRICE;
        case 13: return BID_VOLUME;
        case 14: return BID_TIME;
        case 15: return PREVIOUS_PRICE;
        case 16: return PREVIOUS_DATE;
        case 17: return RELATIVE_DIFF;
        case 18: return ABS_DIFF;
        case 19: return HIGH_PRICE;
        case 20: return LOW_PRICE;
        case 21: return OPEN_PRICE;
        case 22: return WEEK_HIGH_PRICE;
        case 23: return DATE_WEEK_HIGH;
        case 24: return WEEK_LOW_PRICE;
        case 25: return DATE_WEEK_LOW;
        case 26: return MONTH_HIGH_PRICE;
        case 27: return DATE_MONTH_HIGH;
        case 28: return MONTH_LOW_PRICE;
        case 29: return DATE_MONTH_LOW;
        case 30: return YEAR_HIGH_PRICE;
        case 31: return DATE_YEAR_HIGH;
        case 32: return YEAR_LOW_PRICE;
        case 33: return DATE_YEAR_LOW;
        case 34: return LAST_ADDENDUM;
        case 35: return TRADING_PHASE;
        case 36: return INDICATIVE_PRICE;
        case 37: return PREVALENCE_VOLUME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SecurityChangedField>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SecurityChangedField> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SecurityChangedField>() {
            public SecurityChangedField findValueByNumber(int number) {
              return SecurityChangedField.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.getDescriptor().getEnumTypes().get(0);
    }

    private static final SecurityChangedField[] VALUES = values();

    public static SecurityChangedField valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SecurityChangedField(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField)
  }

  private int bitField0_;
  private int bitField1_;
  public static final int SECURITY_WITH_STOCKEXCHANGE_FIELD_NUMBER = 1;
  private com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange securityWithStockexchange_;
  /**
   * <pre>
   ** Security with stockExchange object (security code, stock exchange) 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
   */
  public boolean hasSecurityWithStockexchange() {
    return securityWithStockexchange_ != null;
  }
  /**
   * <pre>
   ** Security with stockExchange object (security code, stock exchange) 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange getSecurityWithStockexchange() {
    return securityWithStockexchange_ == null ? com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.getDefaultInstance() : securityWithStockexchange_;
  }
  /**
   * <pre>
   ** Security with stockExchange object (security code, stock exchange) 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder getSecurityWithStockexchangeOrBuilder() {
    return getSecurityWithStockexchange();
  }

  public static final int CHANGED_FIELDS_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Integer> changedFields_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField> changedFields_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField>() {
            public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField result = com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField.valueOf(from);
              return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   ** Security fields, which were changed 
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
   */
  public java.util.List<com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField> getChangedFieldsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField>(changedFields_, changedFields_converter_);
  }
  /**
   * <pre>
   ** Security fields, which were changed 
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
   */
  public int getChangedFieldsCount() {
    return changedFields_.size();
  }
  /**
   * <pre>
   ** Security fields, which were changed 
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField getChangedFields(int index) {
    return changedFields_converter_.convert(changedFields_.get(index));
  }
  /**
   * <pre>
   ** Security fields, which were changed 
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
   */
  public java.util.List<java.lang.Integer>
  getChangedFieldsValueList() {
    return changedFields_;
  }
  /**
   * <pre>
   ** Security fields, which were changed 
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
   */
  public int getChangedFieldsValue(int index) {
    return changedFields_.get(index);
  }
  private int changedFieldsMemoizedSerializedSize;

  public static final int CURRENCY_FIELD_NUMBER = 3;
  private volatile java.lang.Object currency_;
  /**
   * <pre>
   ** Currency 
   * </pre>
   *
   * <code>string currency = 3;</code>
   */
  public java.lang.String getCurrency() {
    java.lang.Object ref = currency_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      currency_ = s;
      return s;
    }
  }
  /**
   * <pre>
   ** Currency 
   * </pre>
   *
   * <code>string currency = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCurrencyBytes() {
    java.lang.Object ref = currency_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      currency_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int LAST_PRICE_FIELD_NUMBER = 4;
  private double lastPrice_;
  /**
   * <pre>
   ** Price of the last trade  
   * </pre>
   *
   * <code>double last_price = 4;</code>
   */
  public double getLastPrice() {
    return lastPrice_;
  }

  public static final int LAST_VOLUME_FIELD_NUMBER = 5;
  private double lastVolume_;
  /**
   * <pre>
   ** Volume last trade  
   * </pre>
   *
   * <code>double last_volume = 5;</code>
   */
  public double getLastVolume() {
    return lastVolume_;
  }

  public static final int LAST_DATE_TIME_FIELD_NUMBER = 6;
  private com.consorsbank.module.tapi.grpc.common.Timestamp lastDateTime_;
  /**
   * <pre>
   ** Last quote date and time 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
   */
  public boolean hasLastDateTime() {
    return lastDateTime_ != null;
  }
  /**
   * <pre>
   ** Last quote date and time 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Timestamp getLastDateTime() {
    return lastDateTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : lastDateTime_;
  }
  /**
   * <pre>
   ** Last quote date and time 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getLastDateTimeOrBuilder() {
    return getLastDateTime();
  }

  public static final int TODAY_NUM_TRADES_FIELD_NUMBER = 7;
  private int todayNumTrades_;
  /**
   * <pre>
   ** Today number of tradings  
   * </pre>
   *
   * <code>int32 today_num_trades = 7;</code>
   */
  public int getTodayNumTrades() {
    return todayNumTrades_;
  }

  public static final int TODAY_VOLUME_FIELD_NUMBER = 8;
  private double todayVolume_;
  /**
   * <pre>
   ** Today volume 
   * </pre>
   *
   * <code>double today_volume = 8;</code>
   */
  public double getTodayVolume() {
    return todayVolume_;
  }

  public static final int ASK_PRICE_FIELD_NUMBER = 9;
  private double askPrice_;
  /**
   * <pre>
   ** Last ask price 
   * </pre>
   *
   * <code>double ask_price = 9;</code>
   */
  public double getAskPrice() {
    return askPrice_;
  }

  public static final int ASK_VOLUME_FIELD_NUMBER = 10;
  private double askVolume_;
  /**
   * <pre>
   ** Volume last ask 
   * </pre>
   *
   * <code>double ask_volume = 10;</code>
   */
  public double getAskVolume() {
    return askVolume_;
  }

  public static final int ASK_TIME_FIELD_NUMBER = 11;
  private com.consorsbank.module.tapi.grpc.common.Timestamp askTime_;
  /**
   * <pre>
   ** Time of the last ask 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
   */
  public boolean hasAskTime() {
    return askTime_ != null;
  }
  /**
   * <pre>
   ** Time of the last ask 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Timestamp getAskTime() {
    return askTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : askTime_;
  }
  /**
   * <pre>
   ** Time of the last ask 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getAskTimeOrBuilder() {
    return getAskTime();
  }

  public static final int BID_PRICE_FIELD_NUMBER = 12;
  private double bidPrice_;
  /**
   * <pre>
   ** Last bid price 
   * </pre>
   *
   * <code>double bid_price = 12;</code>
   */
  public double getBidPrice() {
    return bidPrice_;
  }

  public static final int BID_VOLUME_FIELD_NUMBER = 13;
  private double bidVolume_;
  /**
   * <pre>
   ** Volume last bid 
   * </pre>
   *
   * <code>double bid_volume = 13;</code>
   */
  public double getBidVolume() {
    return bidVolume_;
  }

  public static final int BID_TIME_FIELD_NUMBER = 14;
  private com.consorsbank.module.tapi.grpc.common.Timestamp bidTime_;
  /**
   * <pre>
   ** Time of the last bid 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
   */
  public boolean hasBidTime() {
    return bidTime_ != null;
  }
  /**
   * <pre>
   ** Time of the last bid 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Timestamp getBidTime() {
    return bidTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : bidTime_;
  }
  /**
   * <pre>
   ** Time of the last bid 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getBidTimeOrBuilder() {
    return getBidTime();
  }

  public static final int PREVIOUS_PRICE_FIELD_NUMBER = 15;
  private double previousPrice_;
  /**
   * <pre>
   ** Quote of the previous trading day  
   * </pre>
   *
   * <code>double previous_price = 15;</code>
   */
  public double getPreviousPrice() {
    return previousPrice_;
  }

  public static final int PREVIOUS_DATE_FIELD_NUMBER = 16;
  private com.consorsbank.module.tapi.grpc.common.Date previousDate_;
  /**
   * <pre>
   ** Date of the previous trading day  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
   */
  public boolean hasPreviousDate() {
    return previousDate_ != null;
  }
  /**
   * <pre>
   ** Date of the previous trading day  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getPreviousDate() {
    return previousDate_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : previousDate_;
  }
  /**
   * <pre>
   ** Date of the previous trading day  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getPreviousDateOrBuilder() {
    return getPreviousDate();
  }

  public static final int RELATIVE_DIFF_FIELD_NUMBER = 17;
  private double relativeDiff_;
  /**
   * <pre>
   ** Relative difference to the previous day  
   * </pre>
   *
   * <code>double relative_diff = 17;</code>
   */
  public double getRelativeDiff() {
    return relativeDiff_;
  }

  public static final int ABS_DIFF_FIELD_NUMBER = 18;
  private double absDiff_;
  /**
   * <pre>
   ** Absolute difference to the previous day 
   * </pre>
   *
   * <code>double abs_diff = 18;</code>
   */
  public double getAbsDiff() {
    return absDiff_;
  }

  public static final int HIGH_PRICE_FIELD_NUMBER = 19;
  private double highPrice_;
  /**
   * <pre>
   ** Highest price 
   * </pre>
   *
   * <code>double high_price = 19;</code>
   */
  public double getHighPrice() {
    return highPrice_;
  }

  public static final int LOW_PRICE_FIELD_NUMBER = 20;
  private double lowPrice_;
  /**
   * <pre>
   ** Lowest price 
   * </pre>
   *
   * <code>double low_price = 20;</code>
   */
  public double getLowPrice() {
    return lowPrice_;
  }

  public static final int OPEN_PRICE_FIELD_NUMBER = 21;
  private double openPrice_;
  /**
   * <pre>
   ** Price at opening 
   * </pre>
   *
   * <code>double open_price = 21;</code>
   */
  public double getOpenPrice() {
    return openPrice_;
  }

  public static final int WEEK_HIGH_PRICE_FIELD_NUMBER = 22;
  private double weekHighPrice_;
  /**
   * <pre>
   ** Highest price of the previous week  
   * </pre>
   *
   * <code>double week_high_price = 22;</code>
   */
  public double getWeekHighPrice() {
    return weekHighPrice_;
  }

  public static final int DATE_WEEK_HIGH_FIELD_NUMBER = 23;
  private com.consorsbank.module.tapi.grpc.common.Date dateWeekHigh_;
  /**
   * <pre>
   ** Date of highest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
   */
  public boolean hasDateWeekHigh() {
    return dateWeekHigh_ != null;
  }
  /**
   * <pre>
   ** Date of highest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateWeekHigh() {
    return dateWeekHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekHigh_;
  }
  /**
   * <pre>
   ** Date of highest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateWeekHighOrBuilder() {
    return getDateWeekHigh();
  }

  public static final int WEEK_LOW_PRICE_FIELD_NUMBER = 24;
  private double weekLowPrice_;
  /**
   * <pre>
   ** Lowest price of the previous week  
   * </pre>
   *
   * <code>double week_low_price = 24;</code>
   */
  public double getWeekLowPrice() {
    return weekLowPrice_;
  }

  public static final int DATE_WEEK_LOW_FIELD_NUMBER = 25;
  private com.consorsbank.module.tapi.grpc.common.Date dateWeekLow_;
  /**
   * <pre>
   ** Date of lowest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
   */
  public boolean hasDateWeekLow() {
    return dateWeekLow_ != null;
  }
  /**
   * <pre>
   ** Date of lowest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateWeekLow() {
    return dateWeekLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekLow_;
  }
  /**
   * <pre>
   ** Date of lowest price of the previous week  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateWeekLowOrBuilder() {
    return getDateWeekLow();
  }

  public static final int MONTH_HIGH_PRICE_FIELD_NUMBER = 26;
  private double monthHighPrice_;
  /**
   * <pre>
   ** Highest price of the previous month  
   * </pre>
   *
   * <code>double month_high_price = 26;</code>
   */
  public double getMonthHighPrice() {
    return monthHighPrice_;
  }

  public static final int DATE_MONTH_HIGH_FIELD_NUMBER = 27;
  private com.consorsbank.module.tapi.grpc.common.Date dateMonthHigh_;
  /**
   * <pre>
   ** Date of highest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
   */
  public boolean hasDateMonthHigh() {
    return dateMonthHigh_ != null;
  }
  /**
   * <pre>
   ** Date of highest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateMonthHigh() {
    return dateMonthHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthHigh_;
  }
  /**
   * <pre>
   ** Date of highest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateMonthHighOrBuilder() {
    return getDateMonthHigh();
  }

  public static final int MONTH_LOW_PRICE_FIELD_NUMBER = 28;
  private double monthLowPrice_;
  /**
   * <pre>
   ** Lowest price of the previous month 
   * </pre>
   *
   * <code>double month_low_price = 28;</code>
   */
  public double getMonthLowPrice() {
    return monthLowPrice_;
  }

  public static final int DATE_MONTH_LOW_FIELD_NUMBER = 29;
  private com.consorsbank.module.tapi.grpc.common.Date dateMonthLow_;
  /**
   * <pre>
   ** Date of lowest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
   */
  public boolean hasDateMonthLow() {
    return dateMonthLow_ != null;
  }
  /**
   * <pre>
   ** Date of lowest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateMonthLow() {
    return dateMonthLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthLow_;
  }
  /**
   * <pre>
   ** Date of lowest price of the previous month  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateMonthLowOrBuilder() {
    return getDateMonthLow();
  }

  public static final int YEAR_HIGH_PRICE_FIELD_NUMBER = 30;
  private double yearHighPrice_;
  /**
   * <pre>
   ** Highest price of the current year  
   * </pre>
   *
   * <code>double year_high_price = 30;</code>
   */
  public double getYearHighPrice() {
    return yearHighPrice_;
  }

  public static final int DATE_YEAR_HIGH_FIELD_NUMBER = 31;
  private com.consorsbank.module.tapi.grpc.common.Date dateYearHigh_;
  /**
   * <pre>
   ** Date of the highest price of the current year 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
   */
  public boolean hasDateYearHigh() {
    return dateYearHigh_ != null;
  }
  /**
   * <pre>
   ** Date of the highest price of the current year 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateYearHigh() {
    return dateYearHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearHigh_;
  }
  /**
   * <pre>
   ** Date of the highest price of the current year 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateYearHighOrBuilder() {
    return getDateYearHigh();
  }

  public static final int YEAR_LOW_PRICE_FIELD_NUMBER = 32;
  private double yearLowPrice_;
  /**
   * <pre>
   ** Lowest price of the current year 
   * </pre>
   *
   * <code>double year_low_price = 32;</code>
   */
  public double getYearLowPrice() {
    return yearLowPrice_;
  }

  public static final int DATE_YEAR_LOW_FIELD_NUMBER = 33;
  private com.consorsbank.module.tapi.grpc.common.Date dateYearLow_;
  /**
   * <pre>
   ** Date of the lowest price of the current year  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
   */
  public boolean hasDateYearLow() {
    return dateYearLow_ != null;
  }
  /**
   * <pre>
   ** Date of the lowest price of the current year  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getDateYearLow() {
    return dateYearLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearLow_;
  }
  /**
   * <pre>
   ** Date of the lowest price of the current year  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateYearLowOrBuilder() {
    return getDateYearLow();
  }

  public static final int LAST_ADDENDUM_FIELD_NUMBER = 34;
  private volatile java.lang.Object lastAddendum_;
  /**
   * <pre>
   ** Addendum of the last price. 
   * </pre>
   *
   * <code>string last_addendum = 34;</code>
   */
  public java.lang.String getLastAddendum() {
    java.lang.Object ref = lastAddendum_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      lastAddendum_ = s;
      return s;
    }
  }
  /**
   * <pre>
   ** Addendum of the last price. 
   * </pre>
   *
   * <code>string last_addendum = 34;</code>
   */
  public com.google.protobuf.ByteString
      getLastAddendumBytes() {
    java.lang.Object ref = lastAddendum_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      lastAddendum_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TRADING_PHASE_FIELD_NUMBER = 35;
  private int tradingPhase_;
  /**
   * <pre>
   ** Trading phase  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
   */
  public int getTradingPhaseValue() {
    return tradingPhase_;
  }
  /**
   * <pre>
   ** Trading phase  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.TradingPhase getTradingPhase() {
    @SuppressWarnings("deprecation")
    com.consorsbank.module.tapi.grpc.security.TradingPhase result = com.consorsbank.module.tapi.grpc.security.TradingPhase.valueOf(tradingPhase_);
    return result == null ? com.consorsbank.module.tapi.grpc.security.TradingPhase.UNRECOGNIZED : result;
  }

  public static final int INDICATIVE_PRICE_FIELD_NUMBER = 36;
  private double indicativePrice_;
  /**
   * <pre>
   ** Indicative price 
   * </pre>
   *
   * <code>double indicative_price = 36;</code>
   */
  public double getIndicativePrice() {
    return indicativePrice_;
  }

  public static final int PREVALENCE_VOLUME_FIELD_NUMBER = 37;
  private double prevalenceVolume_;
  /**
   * <pre>
   ** Trading volume corresponding to the last price 
   * </pre>
   *
   * <code>double prevalence_volume = 37;</code>
   */
  public double getPrevalenceVolume() {
    return prevalenceVolume_;
  }

  public static final int ERROR_FIELD_NUMBER = 1000;
  private com.consorsbank.module.tapi.grpc.common.Error error_;
  /**
   * <pre>
   **
   * Error information if occuirs
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
   */
  public boolean hasError() {
    return error_ != null;
  }
  /**
   * <pre>
   **
   * Error information if occuirs
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Error getError() {
    return error_ == null ? com.consorsbank.module.tapi.grpc.common.Error.getDefaultInstance() : error_;
  }
  /**
   * <pre>
   **
   * Error information if occuirs
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.ErrorOrBuilder getErrorOrBuilder() {
    return getError();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (securityWithStockexchange_ != null) {
      output.writeMessage(1, getSecurityWithStockexchange());
    }
    if (getChangedFieldsList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(changedFieldsMemoizedSerializedSize);
    }
    for (int i = 0; i < changedFields_.size(); i++) {
      output.writeEnumNoTag(changedFields_.get(i));
    }
    if (!getCurrencyBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, currency_);
    }
    if (lastPrice_ != 0D) {
      output.writeDouble(4, lastPrice_);
    }
    if (lastVolume_ != 0D) {
      output.writeDouble(5, lastVolume_);
    }
    if (lastDateTime_ != null) {
      output.writeMessage(6, getLastDateTime());
    }
    if (todayNumTrades_ != 0) {
      output.writeInt32(7, todayNumTrades_);
    }
    if (todayVolume_ != 0D) {
      output.writeDouble(8, todayVolume_);
    }
    if (askPrice_ != 0D) {
      output.writeDouble(9, askPrice_);
    }
    if (askVolume_ != 0D) {
      output.writeDouble(10, askVolume_);
    }
    if (askTime_ != null) {
      output.writeMessage(11, getAskTime());
    }
    if (bidPrice_ != 0D) {
      output.writeDouble(12, bidPrice_);
    }
    if (bidVolume_ != 0D) {
      output.writeDouble(13, bidVolume_);
    }
    if (bidTime_ != null) {
      output.writeMessage(14, getBidTime());
    }
    if (previousPrice_ != 0D) {
      output.writeDouble(15, previousPrice_);
    }
    if (previousDate_ != null) {
      output.writeMessage(16, getPreviousDate());
    }
    if (relativeDiff_ != 0D) {
      output.writeDouble(17, relativeDiff_);
    }
    if (absDiff_ != 0D) {
      output.writeDouble(18, absDiff_);
    }
    if (highPrice_ != 0D) {
      output.writeDouble(19, highPrice_);
    }
    if (lowPrice_ != 0D) {
      output.writeDouble(20, lowPrice_);
    }
    if (openPrice_ != 0D) {
      output.writeDouble(21, openPrice_);
    }
    if (weekHighPrice_ != 0D) {
      output.writeDouble(22, weekHighPrice_);
    }
    if (dateWeekHigh_ != null) {
      output.writeMessage(23, getDateWeekHigh());
    }
    if (weekLowPrice_ != 0D) {
      output.writeDouble(24, weekLowPrice_);
    }
    if (dateWeekLow_ != null) {
      output.writeMessage(25, getDateWeekLow());
    }
    if (monthHighPrice_ != 0D) {
      output.writeDouble(26, monthHighPrice_);
    }
    if (dateMonthHigh_ != null) {
      output.writeMessage(27, getDateMonthHigh());
    }
    if (monthLowPrice_ != 0D) {
      output.writeDouble(28, monthLowPrice_);
    }
    if (dateMonthLow_ != null) {
      output.writeMessage(29, getDateMonthLow());
    }
    if (yearHighPrice_ != 0D) {
      output.writeDouble(30, yearHighPrice_);
    }
    if (dateYearHigh_ != null) {
      output.writeMessage(31, getDateYearHigh());
    }
    if (yearLowPrice_ != 0D) {
      output.writeDouble(32, yearLowPrice_);
    }
    if (dateYearLow_ != null) {
      output.writeMessage(33, getDateYearLow());
    }
    if (!getLastAddendumBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 34, lastAddendum_);
    }
    if (tradingPhase_ != com.consorsbank.module.tapi.grpc.security.TradingPhase.NONE.getNumber()) {
      output.writeEnum(35, tradingPhase_);
    }
    if (indicativePrice_ != 0D) {
      output.writeDouble(36, indicativePrice_);
    }
    if (prevalenceVolume_ != 0D) {
      output.writeDouble(37, prevalenceVolume_);
    }
    if (error_ != null) {
      output.writeMessage(1000, getError());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (securityWithStockexchange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSecurityWithStockexchange());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < changedFields_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(changedFields_.get(i));
      }
      size += dataSize;
      if (!getChangedFieldsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }changedFieldsMemoizedSerializedSize = dataSize;
    }
    if (!getCurrencyBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, currency_);
    }
    if (lastPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(4, lastPrice_);
    }
    if (lastVolume_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, lastVolume_);
    }
    if (lastDateTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getLastDateTime());
    }
    if (todayNumTrades_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, todayNumTrades_);
    }
    if (todayVolume_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, todayVolume_);
    }
    if (askPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(9, askPrice_);
    }
    if (askVolume_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(10, askVolume_);
    }
    if (askTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getAskTime());
    }
    if (bidPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, bidPrice_);
    }
    if (bidVolume_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(13, bidVolume_);
    }
    if (bidTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getBidTime());
    }
    if (previousPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(15, previousPrice_);
    }
    if (previousDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getPreviousDate());
    }
    if (relativeDiff_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(17, relativeDiff_);
    }
    if (absDiff_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(18, absDiff_);
    }
    if (highPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(19, highPrice_);
    }
    if (lowPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(20, lowPrice_);
    }
    if (openPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(21, openPrice_);
    }
    if (weekHighPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(22, weekHighPrice_);
    }
    if (dateWeekHigh_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getDateWeekHigh());
    }
    if (weekLowPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(24, weekLowPrice_);
    }
    if (dateWeekLow_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, getDateWeekLow());
    }
    if (monthHighPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(26, monthHighPrice_);
    }
    if (dateMonthHigh_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(27, getDateMonthHigh());
    }
    if (monthLowPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(28, monthLowPrice_);
    }
    if (dateMonthLow_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(29, getDateMonthLow());
    }
    if (yearHighPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(30, yearHighPrice_);
    }
    if (dateYearHigh_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, getDateYearHigh());
    }
    if (yearLowPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(32, yearLowPrice_);
    }
    if (dateYearLow_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(33, getDateYearLow());
    }
    if (!getLastAddendumBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(34, lastAddendum_);
    }
    if (tradingPhase_ != com.consorsbank.module.tapi.grpc.security.TradingPhase.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(35, tradingPhase_);
    }
    if (indicativePrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(36, indicativePrice_);
    }
    if (prevalenceVolume_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(37, prevalenceVolume_);
    }
    if (error_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1000, getError());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply)) {
      return super.equals(obj);
    }
    com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply other = (com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply) obj;

    boolean result = true;
    result = result && (hasSecurityWithStockexchange() == other.hasSecurityWithStockexchange());
    if (hasSecurityWithStockexchange()) {
      result = result && getSecurityWithStockexchange()
          .equals(other.getSecurityWithStockexchange());
    }
    result = result && changedFields_.equals(other.changedFields_);
    result = result && getCurrency()
        .equals(other.getCurrency());
    result = result && (
        java.lang.Double.doubleToLongBits(getLastPrice())
        == java.lang.Double.doubleToLongBits(
            other.getLastPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getLastVolume())
        == java.lang.Double.doubleToLongBits(
            other.getLastVolume()));
    result = result && (hasLastDateTime() == other.hasLastDateTime());
    if (hasLastDateTime()) {
      result = result && getLastDateTime()
          .equals(other.getLastDateTime());
    }
    result = result && (getTodayNumTrades()
        == other.getTodayNumTrades());
    result = result && (
        java.lang.Double.doubleToLongBits(getTodayVolume())
        == java.lang.Double.doubleToLongBits(
            other.getTodayVolume()));
    result = result && (
        java.lang.Double.doubleToLongBits(getAskPrice())
        == java.lang.Double.doubleToLongBits(
            other.getAskPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getAskVolume())
        == java.lang.Double.doubleToLongBits(
            other.getAskVolume()));
    result = result && (hasAskTime() == other.hasAskTime());
    if (hasAskTime()) {
      result = result && getAskTime()
          .equals(other.getAskTime());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getBidPrice())
        == java.lang.Double.doubleToLongBits(
            other.getBidPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getBidVolume())
        == java.lang.Double.doubleToLongBits(
            other.getBidVolume()));
    result = result && (hasBidTime() == other.hasBidTime());
    if (hasBidTime()) {
      result = result && getBidTime()
          .equals(other.getBidTime());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getPreviousPrice())
        == java.lang.Double.doubleToLongBits(
            other.getPreviousPrice()));
    result = result && (hasPreviousDate() == other.hasPreviousDate());
    if (hasPreviousDate()) {
      result = result && getPreviousDate()
          .equals(other.getPreviousDate());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getRelativeDiff())
        == java.lang.Double.doubleToLongBits(
            other.getRelativeDiff()));
    result = result && (
        java.lang.Double.doubleToLongBits(getAbsDiff())
        == java.lang.Double.doubleToLongBits(
            other.getAbsDiff()));
    result = result && (
        java.lang.Double.doubleToLongBits(getHighPrice())
        == java.lang.Double.doubleToLongBits(
            other.getHighPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getLowPrice())
        == java.lang.Double.doubleToLongBits(
            other.getLowPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getOpenPrice())
        == java.lang.Double.doubleToLongBits(
            other.getOpenPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getWeekHighPrice())
        == java.lang.Double.doubleToLongBits(
            other.getWeekHighPrice()));
    result = result && (hasDateWeekHigh() == other.hasDateWeekHigh());
    if (hasDateWeekHigh()) {
      result = result && getDateWeekHigh()
          .equals(other.getDateWeekHigh());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getWeekLowPrice())
        == java.lang.Double.doubleToLongBits(
            other.getWeekLowPrice()));
    result = result && (hasDateWeekLow() == other.hasDateWeekLow());
    if (hasDateWeekLow()) {
      result = result && getDateWeekLow()
          .equals(other.getDateWeekLow());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getMonthHighPrice())
        == java.lang.Double.doubleToLongBits(
            other.getMonthHighPrice()));
    result = result && (hasDateMonthHigh() == other.hasDateMonthHigh());
    if (hasDateMonthHigh()) {
      result = result && getDateMonthHigh()
          .equals(other.getDateMonthHigh());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getMonthLowPrice())
        == java.lang.Double.doubleToLongBits(
            other.getMonthLowPrice()));
    result = result && (hasDateMonthLow() == other.hasDateMonthLow());
    if (hasDateMonthLow()) {
      result = result && getDateMonthLow()
          .equals(other.getDateMonthLow());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getYearHighPrice())
        == java.lang.Double.doubleToLongBits(
            other.getYearHighPrice()));
    result = result && (hasDateYearHigh() == other.hasDateYearHigh());
    if (hasDateYearHigh()) {
      result = result && getDateYearHigh()
          .equals(other.getDateYearHigh());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getYearLowPrice())
        == java.lang.Double.doubleToLongBits(
            other.getYearLowPrice()));
    result = result && (hasDateYearLow() == other.hasDateYearLow());
    if (hasDateYearLow()) {
      result = result && getDateYearLow()
          .equals(other.getDateYearLow());
    }
    result = result && getLastAddendum()
        .equals(other.getLastAddendum());
    result = result && tradingPhase_ == other.tradingPhase_;
    result = result && (
        java.lang.Double.doubleToLongBits(getIndicativePrice())
        == java.lang.Double.doubleToLongBits(
            other.getIndicativePrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getPrevalenceVolume())
        == java.lang.Double.doubleToLongBits(
            other.getPrevalenceVolume()));
    result = result && (hasError() == other.hasError());
    if (hasError()) {
      result = result && getError()
          .equals(other.getError());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSecurityWithStockexchange()) {
      hash = (37 * hash) + SECURITY_WITH_STOCKEXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityWithStockexchange().hashCode();
    }
    if (getChangedFieldsCount() > 0) {
      hash = (37 * hash) + CHANGED_FIELDS_FIELD_NUMBER;
      hash = (53 * hash) + changedFields_.hashCode();
    }
    hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
    hash = (53 * hash) + getCurrency().hashCode();
    hash = (37 * hash) + LAST_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getLastPrice()));
    hash = (37 * hash) + LAST_VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getLastVolume()));
    if (hasLastDateTime()) {
      hash = (37 * hash) + LAST_DATE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getLastDateTime().hashCode();
    }
    hash = (37 * hash) + TODAY_NUM_TRADES_FIELD_NUMBER;
    hash = (53 * hash) + getTodayNumTrades();
    hash = (37 * hash) + TODAY_VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTodayVolume()));
    hash = (37 * hash) + ASK_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAskPrice()));
    hash = (37 * hash) + ASK_VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAskVolume()));
    if (hasAskTime()) {
      hash = (37 * hash) + ASK_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getAskTime().hashCode();
    }
    hash = (37 * hash) + BID_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getBidPrice()));
    hash = (37 * hash) + BID_VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getBidVolume()));
    if (hasBidTime()) {
      hash = (37 * hash) + BID_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBidTime().hashCode();
    }
    hash = (37 * hash) + PREVIOUS_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPreviousPrice()));
    if (hasPreviousDate()) {
      hash = (37 * hash) + PREVIOUS_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getPreviousDate().hashCode();
    }
    hash = (37 * hash) + RELATIVE_DIFF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getRelativeDiff()));
    hash = (37 * hash) + ABS_DIFF_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAbsDiff()));
    hash = (37 * hash) + HIGH_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getHighPrice()));
    hash = (37 * hash) + LOW_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getLowPrice()));
    hash = (37 * hash) + OPEN_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getOpenPrice()));
    hash = (37 * hash) + WEEK_HIGH_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getWeekHighPrice()));
    if (hasDateWeekHigh()) {
      hash = (37 * hash) + DATE_WEEK_HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getDateWeekHigh().hashCode();
    }
    hash = (37 * hash) + WEEK_LOW_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getWeekLowPrice()));
    if (hasDateWeekLow()) {
      hash = (37 * hash) + DATE_WEEK_LOW_FIELD_NUMBER;
      hash = (53 * hash) + getDateWeekLow().hashCode();
    }
    hash = (37 * hash) + MONTH_HIGH_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMonthHighPrice()));
    if (hasDateMonthHigh()) {
      hash = (37 * hash) + DATE_MONTH_HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getDateMonthHigh().hashCode();
    }
    hash = (37 * hash) + MONTH_LOW_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getMonthLowPrice()));
    if (hasDateMonthLow()) {
      hash = (37 * hash) + DATE_MONTH_LOW_FIELD_NUMBER;
      hash = (53 * hash) + getDateMonthLow().hashCode();
    }
    hash = (37 * hash) + YEAR_HIGH_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getYearHighPrice()));
    if (hasDateYearHigh()) {
      hash = (37 * hash) + DATE_YEAR_HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getDateYearHigh().hashCode();
    }
    hash = (37 * hash) + YEAR_LOW_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getYearLowPrice()));
    if (hasDateYearLow()) {
      hash = (37 * hash) + DATE_YEAR_LOW_FIELD_NUMBER;
      hash = (53 * hash) + getDateYearLow().hashCode();
    }
    hash = (37 * hash) + LAST_ADDENDUM_FIELD_NUMBER;
    hash = (53 * hash) + getLastAddendum().hashCode();
    hash = (37 * hash) + TRADING_PHASE_FIELD_NUMBER;
    hash = (53 * hash) + tradingPhase_;
    hash = (37 * hash) + INDICATIVE_PRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getIndicativePrice()));
    hash = (37 * hash) + PREVALENCE_VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPrevalenceVolume()));
    if (hasError()) {
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * Returns market data information
   * </pre>
   *
   * Protobuf type {@code com.consorsbank.module.tapi.grpc.SecurityMarketDataReply}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.consorsbank.module.tapi.grpc.SecurityMarketDataReply)
      com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReplyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityMarketDataReply_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityMarketDataReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.class, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.Builder.class);
    }

    // Construct using com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (securityWithStockexchangeBuilder_ == null) {
        securityWithStockexchange_ = null;
      } else {
        securityWithStockexchange_ = null;
        securityWithStockexchangeBuilder_ = null;
      }
      changedFields_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      currency_ = "";

      lastPrice_ = 0D;

      lastVolume_ = 0D;

      if (lastDateTimeBuilder_ == null) {
        lastDateTime_ = null;
      } else {
        lastDateTime_ = null;
        lastDateTimeBuilder_ = null;
      }
      todayNumTrades_ = 0;

      todayVolume_ = 0D;

      askPrice_ = 0D;

      askVolume_ = 0D;

      if (askTimeBuilder_ == null) {
        askTime_ = null;
      } else {
        askTime_ = null;
        askTimeBuilder_ = null;
      }
      bidPrice_ = 0D;

      bidVolume_ = 0D;

      if (bidTimeBuilder_ == null) {
        bidTime_ = null;
      } else {
        bidTime_ = null;
        bidTimeBuilder_ = null;
      }
      previousPrice_ = 0D;

      if (previousDateBuilder_ == null) {
        previousDate_ = null;
      } else {
        previousDate_ = null;
        previousDateBuilder_ = null;
      }
      relativeDiff_ = 0D;

      absDiff_ = 0D;

      highPrice_ = 0D;

      lowPrice_ = 0D;

      openPrice_ = 0D;

      weekHighPrice_ = 0D;

      if (dateWeekHighBuilder_ == null) {
        dateWeekHigh_ = null;
      } else {
        dateWeekHigh_ = null;
        dateWeekHighBuilder_ = null;
      }
      weekLowPrice_ = 0D;

      if (dateWeekLowBuilder_ == null) {
        dateWeekLow_ = null;
      } else {
        dateWeekLow_ = null;
        dateWeekLowBuilder_ = null;
      }
      monthHighPrice_ = 0D;

      if (dateMonthHighBuilder_ == null) {
        dateMonthHigh_ = null;
      } else {
        dateMonthHigh_ = null;
        dateMonthHighBuilder_ = null;
      }
      monthLowPrice_ = 0D;

      if (dateMonthLowBuilder_ == null) {
        dateMonthLow_ = null;
      } else {
        dateMonthLow_ = null;
        dateMonthLowBuilder_ = null;
      }
      yearHighPrice_ = 0D;

      if (dateYearHighBuilder_ == null) {
        dateYearHigh_ = null;
      } else {
        dateYearHigh_ = null;
        dateYearHighBuilder_ = null;
      }
      yearLowPrice_ = 0D;

      if (dateYearLowBuilder_ == null) {
        dateYearLow_ = null;
      } else {
        dateYearLow_ = null;
        dateYearLowBuilder_ = null;
      }
      lastAddendum_ = "";

      tradingPhase_ = 0;

      indicativePrice_ = 0D;

      prevalenceVolume_ = 0D;

      if (errorBuilder_ == null) {
        error_ = null;
      } else {
        error_ = null;
        errorBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityMarketDataReply_descriptor;
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply getDefaultInstanceForType() {
      return com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.getDefaultInstance();
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply build() {
      com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply buildPartial() {
      com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply result = new com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply(this);
      int from_bitField0_ = bitField0_;
      int from_bitField1_ = bitField1_;
      int to_bitField0_ = 0;
      int to_bitField1_ = 0;
      if (securityWithStockexchangeBuilder_ == null) {
        result.securityWithStockexchange_ = securityWithStockexchange_;
      } else {
        result.securityWithStockexchange_ = securityWithStockexchangeBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        changedFields_ = java.util.Collections.unmodifiableList(changedFields_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.changedFields_ = changedFields_;
      result.currency_ = currency_;
      result.lastPrice_ = lastPrice_;
      result.lastVolume_ = lastVolume_;
      if (lastDateTimeBuilder_ == null) {
        result.lastDateTime_ = lastDateTime_;
      } else {
        result.lastDateTime_ = lastDateTimeBuilder_.build();
      }
      result.todayNumTrades_ = todayNumTrades_;
      result.todayVolume_ = todayVolume_;
      result.askPrice_ = askPrice_;
      result.askVolume_ = askVolume_;
      if (askTimeBuilder_ == null) {
        result.askTime_ = askTime_;
      } else {
        result.askTime_ = askTimeBuilder_.build();
      }
      result.bidPrice_ = bidPrice_;
      result.bidVolume_ = bidVolume_;
      if (bidTimeBuilder_ == null) {
        result.bidTime_ = bidTime_;
      } else {
        result.bidTime_ = bidTimeBuilder_.build();
      }
      result.previousPrice_ = previousPrice_;
      if (previousDateBuilder_ == null) {
        result.previousDate_ = previousDate_;
      } else {
        result.previousDate_ = previousDateBuilder_.build();
      }
      result.relativeDiff_ = relativeDiff_;
      result.absDiff_ = absDiff_;
      result.highPrice_ = highPrice_;
      result.lowPrice_ = lowPrice_;
      result.openPrice_ = openPrice_;
      result.weekHighPrice_ = weekHighPrice_;
      if (dateWeekHighBuilder_ == null) {
        result.dateWeekHigh_ = dateWeekHigh_;
      } else {
        result.dateWeekHigh_ = dateWeekHighBuilder_.build();
      }
      result.weekLowPrice_ = weekLowPrice_;
      if (dateWeekLowBuilder_ == null) {
        result.dateWeekLow_ = dateWeekLow_;
      } else {
        result.dateWeekLow_ = dateWeekLowBuilder_.build();
      }
      result.monthHighPrice_ = monthHighPrice_;
      if (dateMonthHighBuilder_ == null) {
        result.dateMonthHigh_ = dateMonthHigh_;
      } else {
        result.dateMonthHigh_ = dateMonthHighBuilder_.build();
      }
      result.monthLowPrice_ = monthLowPrice_;
      if (dateMonthLowBuilder_ == null) {
        result.dateMonthLow_ = dateMonthLow_;
      } else {
        result.dateMonthLow_ = dateMonthLowBuilder_.build();
      }
      result.yearHighPrice_ = yearHighPrice_;
      if (dateYearHighBuilder_ == null) {
        result.dateYearHigh_ = dateYearHigh_;
      } else {
        result.dateYearHigh_ = dateYearHighBuilder_.build();
      }
      result.yearLowPrice_ = yearLowPrice_;
      if (dateYearLowBuilder_ == null) {
        result.dateYearLow_ = dateYearLow_;
      } else {
        result.dateYearLow_ = dateYearLowBuilder_.build();
      }
      result.lastAddendum_ = lastAddendum_;
      result.tradingPhase_ = tradingPhase_;
      result.indicativePrice_ = indicativePrice_;
      result.prevalenceVolume_ = prevalenceVolume_;
      if (errorBuilder_ == null) {
        result.error_ = error_;
      } else {
        result.error_ = errorBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.bitField1_ = to_bitField1_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply) {
        return mergeFrom((com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply other) {
      if (other == com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.getDefaultInstance()) return this;
      if (other.hasSecurityWithStockexchange()) {
        mergeSecurityWithStockexchange(other.getSecurityWithStockexchange());
      }
      if (!other.changedFields_.isEmpty()) {
        if (changedFields_.isEmpty()) {
          changedFields_ = other.changedFields_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureChangedFieldsIsMutable();
          changedFields_.addAll(other.changedFields_);
        }
        onChanged();
      }
      if (!other.getCurrency().isEmpty()) {
        currency_ = other.currency_;
        onChanged();
      }
      if (other.getLastPrice() != 0D) {
        setLastPrice(other.getLastPrice());
      }
      if (other.getLastVolume() != 0D) {
        setLastVolume(other.getLastVolume());
      }
      if (other.hasLastDateTime()) {
        mergeLastDateTime(other.getLastDateTime());
      }
      if (other.getTodayNumTrades() != 0) {
        setTodayNumTrades(other.getTodayNumTrades());
      }
      if (other.getTodayVolume() != 0D) {
        setTodayVolume(other.getTodayVolume());
      }
      if (other.getAskPrice() != 0D) {
        setAskPrice(other.getAskPrice());
      }
      if (other.getAskVolume() != 0D) {
        setAskVolume(other.getAskVolume());
      }
      if (other.hasAskTime()) {
        mergeAskTime(other.getAskTime());
      }
      if (other.getBidPrice() != 0D) {
        setBidPrice(other.getBidPrice());
      }
      if (other.getBidVolume() != 0D) {
        setBidVolume(other.getBidVolume());
      }
      if (other.hasBidTime()) {
        mergeBidTime(other.getBidTime());
      }
      if (other.getPreviousPrice() != 0D) {
        setPreviousPrice(other.getPreviousPrice());
      }
      if (other.hasPreviousDate()) {
        mergePreviousDate(other.getPreviousDate());
      }
      if (other.getRelativeDiff() != 0D) {
        setRelativeDiff(other.getRelativeDiff());
      }
      if (other.getAbsDiff() != 0D) {
        setAbsDiff(other.getAbsDiff());
      }
      if (other.getHighPrice() != 0D) {
        setHighPrice(other.getHighPrice());
      }
      if (other.getLowPrice() != 0D) {
        setLowPrice(other.getLowPrice());
      }
      if (other.getOpenPrice() != 0D) {
        setOpenPrice(other.getOpenPrice());
      }
      if (other.getWeekHighPrice() != 0D) {
        setWeekHighPrice(other.getWeekHighPrice());
      }
      if (other.hasDateWeekHigh()) {
        mergeDateWeekHigh(other.getDateWeekHigh());
      }
      if (other.getWeekLowPrice() != 0D) {
        setWeekLowPrice(other.getWeekLowPrice());
      }
      if (other.hasDateWeekLow()) {
        mergeDateWeekLow(other.getDateWeekLow());
      }
      if (other.getMonthHighPrice() != 0D) {
        setMonthHighPrice(other.getMonthHighPrice());
      }
      if (other.hasDateMonthHigh()) {
        mergeDateMonthHigh(other.getDateMonthHigh());
      }
      if (other.getMonthLowPrice() != 0D) {
        setMonthLowPrice(other.getMonthLowPrice());
      }
      if (other.hasDateMonthLow()) {
        mergeDateMonthLow(other.getDateMonthLow());
      }
      if (other.getYearHighPrice() != 0D) {
        setYearHighPrice(other.getYearHighPrice());
      }
      if (other.hasDateYearHigh()) {
        mergeDateYearHigh(other.getDateYearHigh());
      }
      if (other.getYearLowPrice() != 0D) {
        setYearLowPrice(other.getYearLowPrice());
      }
      if (other.hasDateYearLow()) {
        mergeDateYearLow(other.getDateYearLow());
      }
      if (!other.getLastAddendum().isEmpty()) {
        lastAddendum_ = other.lastAddendum_;
        onChanged();
      }
      if (other.tradingPhase_ != 0) {
        setTradingPhaseValue(other.getTradingPhaseValue());
      }
      if (other.getIndicativePrice() != 0D) {
        setIndicativePrice(other.getIndicativePrice());
      }
      if (other.getPrevalenceVolume() != 0D) {
        setPrevalenceVolume(other.getPrevalenceVolume());
      }
      if (other.hasError()) {
        mergeError(other.getError());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;
    private int bitField1_;

    private com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange securityWithStockexchange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder> securityWithStockexchangeBuilder_;
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public boolean hasSecurityWithStockexchange() {
      return securityWithStockexchangeBuilder_ != null || securityWithStockexchange_ != null;
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange getSecurityWithStockexchange() {
      if (securityWithStockexchangeBuilder_ == null) {
        return securityWithStockexchange_ == null ? com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.getDefaultInstance() : securityWithStockexchange_;
      } else {
        return securityWithStockexchangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public Builder setSecurityWithStockexchange(com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange value) {
      if (securityWithStockexchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        securityWithStockexchange_ = value;
        onChanged();
      } else {
        securityWithStockexchangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public Builder setSecurityWithStockexchange(
        com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder builderForValue) {
      if (securityWithStockexchangeBuilder_ == null) {
        securityWithStockexchange_ = builderForValue.build();
        onChanged();
      } else {
        securityWithStockexchangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public Builder mergeSecurityWithStockexchange(com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange value) {
      if (securityWithStockexchangeBuilder_ == null) {
        if (securityWithStockexchange_ != null) {
          securityWithStockexchange_ =
            com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.newBuilder(securityWithStockexchange_).mergeFrom(value).buildPartial();
        } else {
          securityWithStockexchange_ = value;
        }
        onChanged();
      } else {
        securityWithStockexchangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public Builder clearSecurityWithStockexchange() {
      if (securityWithStockexchangeBuilder_ == null) {
        securityWithStockexchange_ = null;
        onChanged();
      } else {
        securityWithStockexchange_ = null;
        securityWithStockexchangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder getSecurityWithStockexchangeBuilder() {
      
      onChanged();
      return getSecurityWithStockexchangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder getSecurityWithStockexchangeOrBuilder() {
      if (securityWithStockexchangeBuilder_ != null) {
        return securityWithStockexchangeBuilder_.getMessageOrBuilder();
      } else {
        return securityWithStockexchange_ == null ?
            com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.getDefaultInstance() : securityWithStockexchange_;
      }
    }
    /**
     * <pre>
     ** Security with stockExchange object (security code, stock exchange) 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder> 
        getSecurityWithStockexchangeFieldBuilder() {
      if (securityWithStockexchangeBuilder_ == null) {
        securityWithStockexchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange.Builder, com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder>(
                getSecurityWithStockexchange(),
                getParentForChildren(),
                isClean());
        securityWithStockexchange_ = null;
      }
      return securityWithStockexchangeBuilder_;
    }

    private java.util.List<java.lang.Integer> changedFields_ =
      java.util.Collections.emptyList();
    private void ensureChangedFieldsIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        changedFields_ = new java.util.ArrayList<java.lang.Integer>(changedFields_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public java.util.List<com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField> getChangedFieldsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField>(changedFields_, changedFields_converter_);
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public int getChangedFieldsCount() {
      return changedFields_.size();
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField getChangedFields(int index) {
      return changedFields_converter_.convert(changedFields_.get(index));
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder setChangedFields(
        int index, com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChangedFieldsIsMutable();
      changedFields_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder addChangedFields(com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureChangedFieldsIsMutable();
      changedFields_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder addAllChangedFields(
        java.lang.Iterable<? extends com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField> values) {
      ensureChangedFieldsIsMutable();
      for (com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply.SecurityChangedField value : values) {
        changedFields_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder clearChangedFields() {
      changedFields_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public java.util.List<java.lang.Integer>
    getChangedFieldsValueList() {
      return java.util.Collections.unmodifiableList(changedFields_);
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public int getChangedFieldsValue(int index) {
      return changedFields_.get(index);
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder setChangedFieldsValue(
        int index, int value) {
      ensureChangedFieldsIsMutable();
      changedFields_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder addChangedFieldsValue(int value) {
      ensureChangedFieldsIsMutable();
      changedFields_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Security fields, which were changed 
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.SecurityMarketDataReply.SecurityChangedField changed_fields = 2;</code>
     */
    public Builder addAllChangedFieldsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureChangedFieldsIsMutable();
      for (int value : values) {
        changedFields_.add(value);
      }
      onChanged();
      return this;
    }

    private java.lang.Object currency_ = "";
    /**
     * <pre>
     ** Currency 
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        currency_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     ** Currency 
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     ** Currency 
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public Builder setCurrency(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      currency_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Currency 
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public Builder clearCurrency() {
      
      currency_ = getDefaultInstance().getCurrency();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Currency 
     * </pre>
     *
     * <code>string currency = 3;</code>
     */
    public Builder setCurrencyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      currency_ = value;
      onChanged();
      return this;
    }

    private double lastPrice_ ;
    /**
     * <pre>
     ** Price of the last trade  
     * </pre>
     *
     * <code>double last_price = 4;</code>
     */
    public double getLastPrice() {
      return lastPrice_;
    }
    /**
     * <pre>
     ** Price of the last trade  
     * </pre>
     *
     * <code>double last_price = 4;</code>
     */
    public Builder setLastPrice(double value) {
      
      lastPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Price of the last trade  
     * </pre>
     *
     * <code>double last_price = 4;</code>
     */
    public Builder clearLastPrice() {
      
      lastPrice_ = 0D;
      onChanged();
      return this;
    }

    private double lastVolume_ ;
    /**
     * <pre>
     ** Volume last trade  
     * </pre>
     *
     * <code>double last_volume = 5;</code>
     */
    public double getLastVolume() {
      return lastVolume_;
    }
    /**
     * <pre>
     ** Volume last trade  
     * </pre>
     *
     * <code>double last_volume = 5;</code>
     */
    public Builder setLastVolume(double value) {
      
      lastVolume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Volume last trade  
     * </pre>
     *
     * <code>double last_volume = 5;</code>
     */
    public Builder clearLastVolume() {
      
      lastVolume_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Timestamp lastDateTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> lastDateTimeBuilder_;
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public boolean hasLastDateTime() {
      return lastDateTimeBuilder_ != null || lastDateTime_ != null;
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp getLastDateTime() {
      if (lastDateTimeBuilder_ == null) {
        return lastDateTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : lastDateTime_;
      } else {
        return lastDateTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public Builder setLastDateTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (lastDateTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        lastDateTime_ = value;
        onChanged();
      } else {
        lastDateTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public Builder setLastDateTime(
        com.consorsbank.module.tapi.grpc.common.Timestamp.Builder builderForValue) {
      if (lastDateTimeBuilder_ == null) {
        lastDateTime_ = builderForValue.build();
        onChanged();
      } else {
        lastDateTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public Builder mergeLastDateTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (lastDateTimeBuilder_ == null) {
        if (lastDateTime_ != null) {
          lastDateTime_ =
            com.consorsbank.module.tapi.grpc.common.Timestamp.newBuilder(lastDateTime_).mergeFrom(value).buildPartial();
        } else {
          lastDateTime_ = value;
        }
        onChanged();
      } else {
        lastDateTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public Builder clearLastDateTime() {
      if (lastDateTimeBuilder_ == null) {
        lastDateTime_ = null;
        onChanged();
      } else {
        lastDateTime_ = null;
        lastDateTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp.Builder getLastDateTimeBuilder() {
      
      onChanged();
      return getLastDateTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getLastDateTimeOrBuilder() {
      if (lastDateTimeBuilder_ != null) {
        return lastDateTimeBuilder_.getMessageOrBuilder();
      } else {
        return lastDateTime_ == null ?
            com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : lastDateTime_;
      }
    }
    /**
     * <pre>
     ** Last quote date and time 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp last_date_time = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> 
        getLastDateTimeFieldBuilder() {
      if (lastDateTimeBuilder_ == null) {
        lastDateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder>(
                getLastDateTime(),
                getParentForChildren(),
                isClean());
        lastDateTime_ = null;
      }
      return lastDateTimeBuilder_;
    }

    private int todayNumTrades_ ;
    /**
     * <pre>
     ** Today number of tradings  
     * </pre>
     *
     * <code>int32 today_num_trades = 7;</code>
     */
    public int getTodayNumTrades() {
      return todayNumTrades_;
    }
    /**
     * <pre>
     ** Today number of tradings  
     * </pre>
     *
     * <code>int32 today_num_trades = 7;</code>
     */
    public Builder setTodayNumTrades(int value) {
      
      todayNumTrades_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Today number of tradings  
     * </pre>
     *
     * <code>int32 today_num_trades = 7;</code>
     */
    public Builder clearTodayNumTrades() {
      
      todayNumTrades_ = 0;
      onChanged();
      return this;
    }

    private double todayVolume_ ;
    /**
     * <pre>
     ** Today volume 
     * </pre>
     *
     * <code>double today_volume = 8;</code>
     */
    public double getTodayVolume() {
      return todayVolume_;
    }
    /**
     * <pre>
     ** Today volume 
     * </pre>
     *
     * <code>double today_volume = 8;</code>
     */
    public Builder setTodayVolume(double value) {
      
      todayVolume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Today volume 
     * </pre>
     *
     * <code>double today_volume = 8;</code>
     */
    public Builder clearTodayVolume() {
      
      todayVolume_ = 0D;
      onChanged();
      return this;
    }

    private double askPrice_ ;
    /**
     * <pre>
     ** Last ask price 
     * </pre>
     *
     * <code>double ask_price = 9;</code>
     */
    public double getAskPrice() {
      return askPrice_;
    }
    /**
     * <pre>
     ** Last ask price 
     * </pre>
     *
     * <code>double ask_price = 9;</code>
     */
    public Builder setAskPrice(double value) {
      
      askPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Last ask price 
     * </pre>
     *
     * <code>double ask_price = 9;</code>
     */
    public Builder clearAskPrice() {
      
      askPrice_ = 0D;
      onChanged();
      return this;
    }

    private double askVolume_ ;
    /**
     * <pre>
     ** Volume last ask 
     * </pre>
     *
     * <code>double ask_volume = 10;</code>
     */
    public double getAskVolume() {
      return askVolume_;
    }
    /**
     * <pre>
     ** Volume last ask 
     * </pre>
     *
     * <code>double ask_volume = 10;</code>
     */
    public Builder setAskVolume(double value) {
      
      askVolume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Volume last ask 
     * </pre>
     *
     * <code>double ask_volume = 10;</code>
     */
    public Builder clearAskVolume() {
      
      askVolume_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Timestamp askTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> askTimeBuilder_;
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public boolean hasAskTime() {
      return askTimeBuilder_ != null || askTime_ != null;
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp getAskTime() {
      if (askTimeBuilder_ == null) {
        return askTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : askTime_;
      } else {
        return askTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public Builder setAskTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (askTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        askTime_ = value;
        onChanged();
      } else {
        askTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public Builder setAskTime(
        com.consorsbank.module.tapi.grpc.common.Timestamp.Builder builderForValue) {
      if (askTimeBuilder_ == null) {
        askTime_ = builderForValue.build();
        onChanged();
      } else {
        askTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public Builder mergeAskTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (askTimeBuilder_ == null) {
        if (askTime_ != null) {
          askTime_ =
            com.consorsbank.module.tapi.grpc.common.Timestamp.newBuilder(askTime_).mergeFrom(value).buildPartial();
        } else {
          askTime_ = value;
        }
        onChanged();
      } else {
        askTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public Builder clearAskTime() {
      if (askTimeBuilder_ == null) {
        askTime_ = null;
        onChanged();
      } else {
        askTime_ = null;
        askTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp.Builder getAskTimeBuilder() {
      
      onChanged();
      return getAskTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getAskTimeOrBuilder() {
      if (askTimeBuilder_ != null) {
        return askTimeBuilder_.getMessageOrBuilder();
      } else {
        return askTime_ == null ?
            com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : askTime_;
      }
    }
    /**
     * <pre>
     ** Time of the last ask 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp ask_time = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> 
        getAskTimeFieldBuilder() {
      if (askTimeBuilder_ == null) {
        askTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder>(
                getAskTime(),
                getParentForChildren(),
                isClean());
        askTime_ = null;
      }
      return askTimeBuilder_;
    }

    private double bidPrice_ ;
    /**
     * <pre>
     ** Last bid price 
     * </pre>
     *
     * <code>double bid_price = 12;</code>
     */
    public double getBidPrice() {
      return bidPrice_;
    }
    /**
     * <pre>
     ** Last bid price 
     * </pre>
     *
     * <code>double bid_price = 12;</code>
     */
    public Builder setBidPrice(double value) {
      
      bidPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Last bid price 
     * </pre>
     *
     * <code>double bid_price = 12;</code>
     */
    public Builder clearBidPrice() {
      
      bidPrice_ = 0D;
      onChanged();
      return this;
    }

    private double bidVolume_ ;
    /**
     * <pre>
     ** Volume last bid 
     * </pre>
     *
     * <code>double bid_volume = 13;</code>
     */
    public double getBidVolume() {
      return bidVolume_;
    }
    /**
     * <pre>
     ** Volume last bid 
     * </pre>
     *
     * <code>double bid_volume = 13;</code>
     */
    public Builder setBidVolume(double value) {
      
      bidVolume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Volume last bid 
     * </pre>
     *
     * <code>double bid_volume = 13;</code>
     */
    public Builder clearBidVolume() {
      
      bidVolume_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Timestamp bidTime_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> bidTimeBuilder_;
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public boolean hasBidTime() {
      return bidTimeBuilder_ != null || bidTime_ != null;
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp getBidTime() {
      if (bidTimeBuilder_ == null) {
        return bidTime_ == null ? com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : bidTime_;
      } else {
        return bidTimeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public Builder setBidTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (bidTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        bidTime_ = value;
        onChanged();
      } else {
        bidTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public Builder setBidTime(
        com.consorsbank.module.tapi.grpc.common.Timestamp.Builder builderForValue) {
      if (bidTimeBuilder_ == null) {
        bidTime_ = builderForValue.build();
        onChanged();
      } else {
        bidTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public Builder mergeBidTime(com.consorsbank.module.tapi.grpc.common.Timestamp value) {
      if (bidTimeBuilder_ == null) {
        if (bidTime_ != null) {
          bidTime_ =
            com.consorsbank.module.tapi.grpc.common.Timestamp.newBuilder(bidTime_).mergeFrom(value).buildPartial();
        } else {
          bidTime_ = value;
        }
        onChanged();
      } else {
        bidTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public Builder clearBidTime() {
      if (bidTimeBuilder_ == null) {
        bidTime_ = null;
        onChanged();
      } else {
        bidTime_ = null;
        bidTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Timestamp.Builder getBidTimeBuilder() {
      
      onChanged();
      return getBidTimeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder getBidTimeOrBuilder() {
      if (bidTimeBuilder_ != null) {
        return bidTimeBuilder_.getMessageOrBuilder();
      } else {
        return bidTime_ == null ?
            com.consorsbank.module.tapi.grpc.common.Timestamp.getDefaultInstance() : bidTime_;
      }
    }
    /**
     * <pre>
     ** Time of the last bid 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Timestamp bid_time = 14;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder> 
        getBidTimeFieldBuilder() {
      if (bidTimeBuilder_ == null) {
        bidTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Timestamp, com.consorsbank.module.tapi.grpc.common.Timestamp.Builder, com.consorsbank.module.tapi.grpc.common.TimestampOrBuilder>(
                getBidTime(),
                getParentForChildren(),
                isClean());
        bidTime_ = null;
      }
      return bidTimeBuilder_;
    }

    private double previousPrice_ ;
    /**
     * <pre>
     ** Quote of the previous trading day  
     * </pre>
     *
     * <code>double previous_price = 15;</code>
     */
    public double getPreviousPrice() {
      return previousPrice_;
    }
    /**
     * <pre>
     ** Quote of the previous trading day  
     * </pre>
     *
     * <code>double previous_price = 15;</code>
     */
    public Builder setPreviousPrice(double value) {
      
      previousPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Quote of the previous trading day  
     * </pre>
     *
     * <code>double previous_price = 15;</code>
     */
    public Builder clearPreviousPrice() {
      
      previousPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date previousDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> previousDateBuilder_;
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public boolean hasPreviousDate() {
      return previousDateBuilder_ != null || previousDate_ != null;
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getPreviousDate() {
      if (previousDateBuilder_ == null) {
        return previousDate_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : previousDate_;
      } else {
        return previousDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public Builder setPreviousDate(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (previousDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        previousDate_ = value;
        onChanged();
      } else {
        previousDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public Builder setPreviousDate(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (previousDateBuilder_ == null) {
        previousDate_ = builderForValue.build();
        onChanged();
      } else {
        previousDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public Builder mergePreviousDate(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (previousDateBuilder_ == null) {
        if (previousDate_ != null) {
          previousDate_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(previousDate_).mergeFrom(value).buildPartial();
        } else {
          previousDate_ = value;
        }
        onChanged();
      } else {
        previousDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public Builder clearPreviousDate() {
      if (previousDateBuilder_ == null) {
        previousDate_ = null;
        onChanged();
      } else {
        previousDate_ = null;
        previousDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getPreviousDateBuilder() {
      
      onChanged();
      return getPreviousDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getPreviousDateOrBuilder() {
      if (previousDateBuilder_ != null) {
        return previousDateBuilder_.getMessageOrBuilder();
      } else {
        return previousDate_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : previousDate_;
      }
    }
    /**
     * <pre>
     ** Date of the previous trading day  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date previous_date = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getPreviousDateFieldBuilder() {
      if (previousDateBuilder_ == null) {
        previousDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getPreviousDate(),
                getParentForChildren(),
                isClean());
        previousDate_ = null;
      }
      return previousDateBuilder_;
    }

    private double relativeDiff_ ;
    /**
     * <pre>
     ** Relative difference to the previous day  
     * </pre>
     *
     * <code>double relative_diff = 17;</code>
     */
    public double getRelativeDiff() {
      return relativeDiff_;
    }
    /**
     * <pre>
     ** Relative difference to the previous day  
     * </pre>
     *
     * <code>double relative_diff = 17;</code>
     */
    public Builder setRelativeDiff(double value) {
      
      relativeDiff_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Relative difference to the previous day  
     * </pre>
     *
     * <code>double relative_diff = 17;</code>
     */
    public Builder clearRelativeDiff() {
      
      relativeDiff_ = 0D;
      onChanged();
      return this;
    }

    private double absDiff_ ;
    /**
     * <pre>
     ** Absolute difference to the previous day 
     * </pre>
     *
     * <code>double abs_diff = 18;</code>
     */
    public double getAbsDiff() {
      return absDiff_;
    }
    /**
     * <pre>
     ** Absolute difference to the previous day 
     * </pre>
     *
     * <code>double abs_diff = 18;</code>
     */
    public Builder setAbsDiff(double value) {
      
      absDiff_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Absolute difference to the previous day 
     * </pre>
     *
     * <code>double abs_diff = 18;</code>
     */
    public Builder clearAbsDiff() {
      
      absDiff_ = 0D;
      onChanged();
      return this;
    }

    private double highPrice_ ;
    /**
     * <pre>
     ** Highest price 
     * </pre>
     *
     * <code>double high_price = 19;</code>
     */
    public double getHighPrice() {
      return highPrice_;
    }
    /**
     * <pre>
     ** Highest price 
     * </pre>
     *
     * <code>double high_price = 19;</code>
     */
    public Builder setHighPrice(double value) {
      
      highPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Highest price 
     * </pre>
     *
     * <code>double high_price = 19;</code>
     */
    public Builder clearHighPrice() {
      
      highPrice_ = 0D;
      onChanged();
      return this;
    }

    private double lowPrice_ ;
    /**
     * <pre>
     ** Lowest price 
     * </pre>
     *
     * <code>double low_price = 20;</code>
     */
    public double getLowPrice() {
      return lowPrice_;
    }
    /**
     * <pre>
     ** Lowest price 
     * </pre>
     *
     * <code>double low_price = 20;</code>
     */
    public Builder setLowPrice(double value) {
      
      lowPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Lowest price 
     * </pre>
     *
     * <code>double low_price = 20;</code>
     */
    public Builder clearLowPrice() {
      
      lowPrice_ = 0D;
      onChanged();
      return this;
    }

    private double openPrice_ ;
    /**
     * <pre>
     ** Price at opening 
     * </pre>
     *
     * <code>double open_price = 21;</code>
     */
    public double getOpenPrice() {
      return openPrice_;
    }
    /**
     * <pre>
     ** Price at opening 
     * </pre>
     *
     * <code>double open_price = 21;</code>
     */
    public Builder setOpenPrice(double value) {
      
      openPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Price at opening 
     * </pre>
     *
     * <code>double open_price = 21;</code>
     */
    public Builder clearOpenPrice() {
      
      openPrice_ = 0D;
      onChanged();
      return this;
    }

    private double weekHighPrice_ ;
    /**
     * <pre>
     ** Highest price of the previous week  
     * </pre>
     *
     * <code>double week_high_price = 22;</code>
     */
    public double getWeekHighPrice() {
      return weekHighPrice_;
    }
    /**
     * <pre>
     ** Highest price of the previous week  
     * </pre>
     *
     * <code>double week_high_price = 22;</code>
     */
    public Builder setWeekHighPrice(double value) {
      
      weekHighPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Highest price of the previous week  
     * </pre>
     *
     * <code>double week_high_price = 22;</code>
     */
    public Builder clearWeekHighPrice() {
      
      weekHighPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateWeekHigh_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateWeekHighBuilder_;
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public boolean hasDateWeekHigh() {
      return dateWeekHighBuilder_ != null || dateWeekHigh_ != null;
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateWeekHigh() {
      if (dateWeekHighBuilder_ == null) {
        return dateWeekHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekHigh_;
      } else {
        return dateWeekHighBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public Builder setDateWeekHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateWeekHighBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateWeekHigh_ = value;
        onChanged();
      } else {
        dateWeekHighBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public Builder setDateWeekHigh(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateWeekHighBuilder_ == null) {
        dateWeekHigh_ = builderForValue.build();
        onChanged();
      } else {
        dateWeekHighBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public Builder mergeDateWeekHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateWeekHighBuilder_ == null) {
        if (dateWeekHigh_ != null) {
          dateWeekHigh_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateWeekHigh_).mergeFrom(value).buildPartial();
        } else {
          dateWeekHigh_ = value;
        }
        onChanged();
      } else {
        dateWeekHighBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public Builder clearDateWeekHigh() {
      if (dateWeekHighBuilder_ == null) {
        dateWeekHigh_ = null;
        onChanged();
      } else {
        dateWeekHigh_ = null;
        dateWeekHighBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateWeekHighBuilder() {
      
      onChanged();
      return getDateWeekHighFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateWeekHighOrBuilder() {
      if (dateWeekHighBuilder_ != null) {
        return dateWeekHighBuilder_.getMessageOrBuilder();
      } else {
        return dateWeekHigh_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekHigh_;
      }
    }
    /**
     * <pre>
     ** Date of highest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_high = 23;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateWeekHighFieldBuilder() {
      if (dateWeekHighBuilder_ == null) {
        dateWeekHighBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateWeekHigh(),
                getParentForChildren(),
                isClean());
        dateWeekHigh_ = null;
      }
      return dateWeekHighBuilder_;
    }

    private double weekLowPrice_ ;
    /**
     * <pre>
     ** Lowest price of the previous week  
     * </pre>
     *
     * <code>double week_low_price = 24;</code>
     */
    public double getWeekLowPrice() {
      return weekLowPrice_;
    }
    /**
     * <pre>
     ** Lowest price of the previous week  
     * </pre>
     *
     * <code>double week_low_price = 24;</code>
     */
    public Builder setWeekLowPrice(double value) {
      
      weekLowPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Lowest price of the previous week  
     * </pre>
     *
     * <code>double week_low_price = 24;</code>
     */
    public Builder clearWeekLowPrice() {
      
      weekLowPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateWeekLow_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateWeekLowBuilder_;
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public boolean hasDateWeekLow() {
      return dateWeekLowBuilder_ != null || dateWeekLow_ != null;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateWeekLow() {
      if (dateWeekLowBuilder_ == null) {
        return dateWeekLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekLow_;
      } else {
        return dateWeekLowBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public Builder setDateWeekLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateWeekLowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateWeekLow_ = value;
        onChanged();
      } else {
        dateWeekLowBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public Builder setDateWeekLow(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateWeekLowBuilder_ == null) {
        dateWeekLow_ = builderForValue.build();
        onChanged();
      } else {
        dateWeekLowBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public Builder mergeDateWeekLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateWeekLowBuilder_ == null) {
        if (dateWeekLow_ != null) {
          dateWeekLow_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateWeekLow_).mergeFrom(value).buildPartial();
        } else {
          dateWeekLow_ = value;
        }
        onChanged();
      } else {
        dateWeekLowBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public Builder clearDateWeekLow() {
      if (dateWeekLowBuilder_ == null) {
        dateWeekLow_ = null;
        onChanged();
      } else {
        dateWeekLow_ = null;
        dateWeekLowBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateWeekLowBuilder() {
      
      onChanged();
      return getDateWeekLowFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateWeekLowOrBuilder() {
      if (dateWeekLowBuilder_ != null) {
        return dateWeekLowBuilder_.getMessageOrBuilder();
      } else {
        return dateWeekLow_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateWeekLow_;
      }
    }
    /**
     * <pre>
     ** Date of lowest price of the previous week  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_week_low = 25;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateWeekLowFieldBuilder() {
      if (dateWeekLowBuilder_ == null) {
        dateWeekLowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateWeekLow(),
                getParentForChildren(),
                isClean());
        dateWeekLow_ = null;
      }
      return dateWeekLowBuilder_;
    }

    private double monthHighPrice_ ;
    /**
     * <pre>
     ** Highest price of the previous month  
     * </pre>
     *
     * <code>double month_high_price = 26;</code>
     */
    public double getMonthHighPrice() {
      return monthHighPrice_;
    }
    /**
     * <pre>
     ** Highest price of the previous month  
     * </pre>
     *
     * <code>double month_high_price = 26;</code>
     */
    public Builder setMonthHighPrice(double value) {
      
      monthHighPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Highest price of the previous month  
     * </pre>
     *
     * <code>double month_high_price = 26;</code>
     */
    public Builder clearMonthHighPrice() {
      
      monthHighPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateMonthHigh_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateMonthHighBuilder_;
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public boolean hasDateMonthHigh() {
      return dateMonthHighBuilder_ != null || dateMonthHigh_ != null;
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateMonthHigh() {
      if (dateMonthHighBuilder_ == null) {
        return dateMonthHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthHigh_;
      } else {
        return dateMonthHighBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public Builder setDateMonthHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateMonthHighBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateMonthHigh_ = value;
        onChanged();
      } else {
        dateMonthHighBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public Builder setDateMonthHigh(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateMonthHighBuilder_ == null) {
        dateMonthHigh_ = builderForValue.build();
        onChanged();
      } else {
        dateMonthHighBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public Builder mergeDateMonthHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateMonthHighBuilder_ == null) {
        if (dateMonthHigh_ != null) {
          dateMonthHigh_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateMonthHigh_).mergeFrom(value).buildPartial();
        } else {
          dateMonthHigh_ = value;
        }
        onChanged();
      } else {
        dateMonthHighBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public Builder clearDateMonthHigh() {
      if (dateMonthHighBuilder_ == null) {
        dateMonthHigh_ = null;
        onChanged();
      } else {
        dateMonthHigh_ = null;
        dateMonthHighBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateMonthHighBuilder() {
      
      onChanged();
      return getDateMonthHighFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateMonthHighOrBuilder() {
      if (dateMonthHighBuilder_ != null) {
        return dateMonthHighBuilder_.getMessageOrBuilder();
      } else {
        return dateMonthHigh_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthHigh_;
      }
    }
    /**
     * <pre>
     ** Date of highest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_high = 27;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateMonthHighFieldBuilder() {
      if (dateMonthHighBuilder_ == null) {
        dateMonthHighBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateMonthHigh(),
                getParentForChildren(),
                isClean());
        dateMonthHigh_ = null;
      }
      return dateMonthHighBuilder_;
    }

    private double monthLowPrice_ ;
    /**
     * <pre>
     ** Lowest price of the previous month 
     * </pre>
     *
     * <code>double month_low_price = 28;</code>
     */
    public double getMonthLowPrice() {
      return monthLowPrice_;
    }
    /**
     * <pre>
     ** Lowest price of the previous month 
     * </pre>
     *
     * <code>double month_low_price = 28;</code>
     */
    public Builder setMonthLowPrice(double value) {
      
      monthLowPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Lowest price of the previous month 
     * </pre>
     *
     * <code>double month_low_price = 28;</code>
     */
    public Builder clearMonthLowPrice() {
      
      monthLowPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateMonthLow_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateMonthLowBuilder_;
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public boolean hasDateMonthLow() {
      return dateMonthLowBuilder_ != null || dateMonthLow_ != null;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateMonthLow() {
      if (dateMonthLowBuilder_ == null) {
        return dateMonthLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthLow_;
      } else {
        return dateMonthLowBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public Builder setDateMonthLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateMonthLowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateMonthLow_ = value;
        onChanged();
      } else {
        dateMonthLowBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public Builder setDateMonthLow(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateMonthLowBuilder_ == null) {
        dateMonthLow_ = builderForValue.build();
        onChanged();
      } else {
        dateMonthLowBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public Builder mergeDateMonthLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateMonthLowBuilder_ == null) {
        if (dateMonthLow_ != null) {
          dateMonthLow_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateMonthLow_).mergeFrom(value).buildPartial();
        } else {
          dateMonthLow_ = value;
        }
        onChanged();
      } else {
        dateMonthLowBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public Builder clearDateMonthLow() {
      if (dateMonthLowBuilder_ == null) {
        dateMonthLow_ = null;
        onChanged();
      } else {
        dateMonthLow_ = null;
        dateMonthLowBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateMonthLowBuilder() {
      
      onChanged();
      return getDateMonthLowFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateMonthLowOrBuilder() {
      if (dateMonthLowBuilder_ != null) {
        return dateMonthLowBuilder_.getMessageOrBuilder();
      } else {
        return dateMonthLow_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateMonthLow_;
      }
    }
    /**
     * <pre>
     ** Date of lowest price of the previous month  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_month_low = 29;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateMonthLowFieldBuilder() {
      if (dateMonthLowBuilder_ == null) {
        dateMonthLowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateMonthLow(),
                getParentForChildren(),
                isClean());
        dateMonthLow_ = null;
      }
      return dateMonthLowBuilder_;
    }

    private double yearHighPrice_ ;
    /**
     * <pre>
     ** Highest price of the current year  
     * </pre>
     *
     * <code>double year_high_price = 30;</code>
     */
    public double getYearHighPrice() {
      return yearHighPrice_;
    }
    /**
     * <pre>
     ** Highest price of the current year  
     * </pre>
     *
     * <code>double year_high_price = 30;</code>
     */
    public Builder setYearHighPrice(double value) {
      
      yearHighPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Highest price of the current year  
     * </pre>
     *
     * <code>double year_high_price = 30;</code>
     */
    public Builder clearYearHighPrice() {
      
      yearHighPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateYearHigh_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateYearHighBuilder_;
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public boolean hasDateYearHigh() {
      return dateYearHighBuilder_ != null || dateYearHigh_ != null;
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateYearHigh() {
      if (dateYearHighBuilder_ == null) {
        return dateYearHigh_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearHigh_;
      } else {
        return dateYearHighBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public Builder setDateYearHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateYearHighBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateYearHigh_ = value;
        onChanged();
      } else {
        dateYearHighBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public Builder setDateYearHigh(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateYearHighBuilder_ == null) {
        dateYearHigh_ = builderForValue.build();
        onChanged();
      } else {
        dateYearHighBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public Builder mergeDateYearHigh(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateYearHighBuilder_ == null) {
        if (dateYearHigh_ != null) {
          dateYearHigh_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateYearHigh_).mergeFrom(value).buildPartial();
        } else {
          dateYearHigh_ = value;
        }
        onChanged();
      } else {
        dateYearHighBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public Builder clearDateYearHigh() {
      if (dateYearHighBuilder_ == null) {
        dateYearHigh_ = null;
        onChanged();
      } else {
        dateYearHigh_ = null;
        dateYearHighBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateYearHighBuilder() {
      
      onChanged();
      return getDateYearHighFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateYearHighOrBuilder() {
      if (dateYearHighBuilder_ != null) {
        return dateYearHighBuilder_.getMessageOrBuilder();
      } else {
        return dateYearHigh_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearHigh_;
      }
    }
    /**
     * <pre>
     ** Date of the highest price of the current year 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_high = 31;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateYearHighFieldBuilder() {
      if (dateYearHighBuilder_ == null) {
        dateYearHighBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateYearHigh(),
                getParentForChildren(),
                isClean());
        dateYearHigh_ = null;
      }
      return dateYearHighBuilder_;
    }

    private double yearLowPrice_ ;
    /**
     * <pre>
     ** Lowest price of the current year 
     * </pre>
     *
     * <code>double year_low_price = 32;</code>
     */
    public double getYearLowPrice() {
      return yearLowPrice_;
    }
    /**
     * <pre>
     ** Lowest price of the current year 
     * </pre>
     *
     * <code>double year_low_price = 32;</code>
     */
    public Builder setYearLowPrice(double value) {
      
      yearLowPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Lowest price of the current year 
     * </pre>
     *
     * <code>double year_low_price = 32;</code>
     */
    public Builder clearYearLowPrice() {
      
      yearLowPrice_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Date dateYearLow_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> dateYearLowBuilder_;
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public boolean hasDateYearLow() {
      return dateYearLowBuilder_ != null || dateYearLow_ != null;
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getDateYearLow() {
      if (dateYearLowBuilder_ == null) {
        return dateYearLow_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearLow_;
      } else {
        return dateYearLowBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public Builder setDateYearLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateYearLowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dateYearLow_ = value;
        onChanged();
      } else {
        dateYearLowBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public Builder setDateYearLow(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (dateYearLowBuilder_ == null) {
        dateYearLow_ = builderForValue.build();
        onChanged();
      } else {
        dateYearLowBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public Builder mergeDateYearLow(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (dateYearLowBuilder_ == null) {
        if (dateYearLow_ != null) {
          dateYearLow_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(dateYearLow_).mergeFrom(value).buildPartial();
        } else {
          dateYearLow_ = value;
        }
        onChanged();
      } else {
        dateYearLowBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public Builder clearDateYearLow() {
      if (dateYearLowBuilder_ == null) {
        dateYearLow_ = null;
        onChanged();
      } else {
        dateYearLow_ = null;
        dateYearLowBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getDateYearLowBuilder() {
      
      onChanged();
      return getDateYearLowFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getDateYearLowOrBuilder() {
      if (dateYearLowBuilder_ != null) {
        return dateYearLowBuilder_.getMessageOrBuilder();
      } else {
        return dateYearLow_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : dateYearLow_;
      }
    }
    /**
     * <pre>
     ** Date of the lowest price of the current year  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date date_year_low = 33;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getDateYearLowFieldBuilder() {
      if (dateYearLowBuilder_ == null) {
        dateYearLowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getDateYearLow(),
                getParentForChildren(),
                isClean());
        dateYearLow_ = null;
      }
      return dateYearLowBuilder_;
    }

    private java.lang.Object lastAddendum_ = "";
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>string last_addendum = 34;</code>
     */
    public java.lang.String getLastAddendum() {
      java.lang.Object ref = lastAddendum_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lastAddendum_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>string last_addendum = 34;</code>
     */
    public com.google.protobuf.ByteString
        getLastAddendumBytes() {
      java.lang.Object ref = lastAddendum_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastAddendum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>string last_addendum = 34;</code>
     */
    public Builder setLastAddendum(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      lastAddendum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>string last_addendum = 34;</code>
     */
    public Builder clearLastAddendum() {
      
      lastAddendum_ = getDefaultInstance().getLastAddendum();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Addendum of the last price. 
     * </pre>
     *
     * <code>string last_addendum = 34;</code>
     */
    public Builder setLastAddendumBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      lastAddendum_ = value;
      onChanged();
      return this;
    }

    private int tradingPhase_ = 0;
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
     */
    public int getTradingPhaseValue() {
      return tradingPhase_;
    }
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
     */
    public Builder setTradingPhaseValue(int value) {
      tradingPhase_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.TradingPhase getTradingPhase() {
      @SuppressWarnings("deprecation")
      com.consorsbank.module.tapi.grpc.security.TradingPhase result = com.consorsbank.module.tapi.grpc.security.TradingPhase.valueOf(tradingPhase_);
      return result == null ? com.consorsbank.module.tapi.grpc.security.TradingPhase.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
     */
    public Builder setTradingPhase(com.consorsbank.module.tapi.grpc.security.TradingPhase value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tradingPhase_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Trading phase  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.TradingPhase trading_phase = 35;</code>
     */
    public Builder clearTradingPhase() {
      
      tradingPhase_ = 0;
      onChanged();
      return this;
    }

    private double indicativePrice_ ;
    /**
     * <pre>
     ** Indicative price 
     * </pre>
     *
     * <code>double indicative_price = 36;</code>
     */
    public double getIndicativePrice() {
      return indicativePrice_;
    }
    /**
     * <pre>
     ** Indicative price 
     * </pre>
     *
     * <code>double indicative_price = 36;</code>
     */
    public Builder setIndicativePrice(double value) {
      
      indicativePrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Indicative price 
     * </pre>
     *
     * <code>double indicative_price = 36;</code>
     */
    public Builder clearIndicativePrice() {
      
      indicativePrice_ = 0D;
      onChanged();
      return this;
    }

    private double prevalenceVolume_ ;
    /**
     * <pre>
     ** Trading volume corresponding to the last price 
     * </pre>
     *
     * <code>double prevalence_volume = 37;</code>
     */
    public double getPrevalenceVolume() {
      return prevalenceVolume_;
    }
    /**
     * <pre>
     ** Trading volume corresponding to the last price 
     * </pre>
     *
     * <code>double prevalence_volume = 37;</code>
     */
    public Builder setPrevalenceVolume(double value) {
      
      prevalenceVolume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Trading volume corresponding to the last price 
     * </pre>
     *
     * <code>double prevalence_volume = 37;</code>
     */
    public Builder clearPrevalenceVolume() {
      
      prevalenceVolume_ = 0D;
      onChanged();
      return this;
    }

    private com.consorsbank.module.tapi.grpc.common.Error error_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Error, com.consorsbank.module.tapi.grpc.common.Error.Builder, com.consorsbank.module.tapi.grpc.common.ErrorOrBuilder> errorBuilder_;
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public boolean hasError() {
      return errorBuilder_ != null || error_ != null;
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Error getError() {
      if (errorBuilder_ == null) {
        return error_ == null ? com.consorsbank.module.tapi.grpc.common.Error.getDefaultInstance() : error_;
      } else {
        return errorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public Builder setError(com.consorsbank.module.tapi.grpc.common.Error value) {
      if (errorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        error_ = value;
        onChanged();
      } else {
        errorBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public Builder setError(
        com.consorsbank.module.tapi.grpc.common.Error.Builder builderForValue) {
      if (errorBuilder_ == null) {
        error_ = builderForValue.build();
        onChanged();
      } else {
        errorBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public Builder mergeError(com.consorsbank.module.tapi.grpc.common.Error value) {
      if (errorBuilder_ == null) {
        if (error_ != null) {
          error_ =
            com.consorsbank.module.tapi.grpc.common.Error.newBuilder(error_).mergeFrom(value).buildPartial();
        } else {
          error_ = value;
        }
        onChanged();
      } else {
        errorBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public Builder clearError() {
      if (errorBuilder_ == null) {
        error_ = null;
        onChanged();
      } else {
        error_ = null;
        errorBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Error.Builder getErrorBuilder() {
      
      onChanged();
      return getErrorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.ErrorOrBuilder getErrorOrBuilder() {
      if (errorBuilder_ != null) {
        return errorBuilder_.getMessageOrBuilder();
      } else {
        return error_ == null ?
            com.consorsbank.module.tapi.grpc.common.Error.getDefaultInstance() : error_;
      }
    }
    /**
     * <pre>
     **
     * Error information if occuirs
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Error error = 1000;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Error, com.consorsbank.module.tapi.grpc.common.Error.Builder, com.consorsbank.module.tapi.grpc.common.ErrorOrBuilder> 
        getErrorFieldBuilder() {
      if (errorBuilder_ == null) {
        errorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Error, com.consorsbank.module.tapi.grpc.common.Error.Builder, com.consorsbank.module.tapi.grpc.common.ErrorOrBuilder>(
                getError(),
                getParentForChildren(),
                isClean());
        error_ = null;
      }
      return errorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.consorsbank.module.tapi.grpc.SecurityMarketDataReply)
  }

  // @@protoc_insertion_point(class_scope:com.consorsbank.module.tapi.grpc.SecurityMarketDataReply)
  private static final com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply();
  }

  public static com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SecurityMarketDataReply>
      PARSER = new com.google.protobuf.AbstractParser<SecurityMarketDataReply>() {
    @java.lang.Override
    public SecurityMarketDataReply parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SecurityMarketDataReply(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SecurityMarketDataReply> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SecurityMarketDataReply> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.consorsbank.module.tapi.grpc.security.SecurityMarketDataReply getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

