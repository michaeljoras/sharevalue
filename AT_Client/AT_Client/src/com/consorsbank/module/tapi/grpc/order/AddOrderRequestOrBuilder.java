// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderService.proto

package com.consorsbank.module.tapi.grpc.order;

public interface AddOrderRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.consorsbank.module.tapi.grpc.AddOrderRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   **
   * Access token
   * </pre>
   *
   * <code>string access_token = 1;</code>
   */
  java.lang.String getAccessToken();
  /**
   * <pre>
   **
   * Access token
   * </pre>
   *
   * <code>string access_token = 1;</code>
   */
  com.google.protobuf.ByteString
      getAccessTokenBytes();

  /**
   * <pre>
   **
   * Trading account number which used for the execution 
   * </pre>
   *
   * <code>string account_number = 2;</code>
   */
  java.lang.String getAccountNumber();
  /**
   * <pre>
   **
   * Trading account number which used for the execution 
   * </pre>
   *
   * <code>string account_number = 2;</code>
   */
  com.google.protobuf.ByteString
      getAccountNumberBytes();

  /**
   * <pre>
   **
   * Security code with stock exchange 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 3;</code>
   */
  boolean hasSecurityWithStockexchange();
  /**
   * <pre>
   **
   * Security code with stock exchange 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 3;</code>
   */
  com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchange getSecurityWithStockexchange();
  /**
   * <pre>
   **
   * Security code with stock exchange 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityWithStockExchange security_with_stockexchange = 3;</code>
   */
  com.consorsbank.module.tapi.grpc.security.SecurityWithStockExchangeOrBuilder getSecurityWithStockexchangeOrBuilder();

  /**
   * <pre>
   **
   * Order type 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderType order_type = 4;</code>
   */
  int getOrderTypeValue();
  /**
   * <pre>
   **
   * Order type 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderType order_type = 4;</code>
   */
  com.consorsbank.module.tapi.grpc.trading.OrderType getOrderType();

  /**
   * <pre>
   **
   * Amount of the securities 
   * </pre>
   *
   * <code>double amount = 5;</code>
   */
  double getAmount();

  /**
   * <pre>
   **
   * Order model 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderModel order_model = 6;</code>
   */
  int getOrderModelValue();
  /**
   * <pre>
   **
   * Order model 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderModel order_model = 6;</code>
   */
  com.consorsbank.module.tapi.grpc.trading.OrderModel getOrderModel();

  /**
   * <pre>
   **
   * Order supplement 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderSupplement order_supplement = 7;</code>
   */
  int getOrderSupplementValue();
  /**
   * <pre>
   **
   * Order supplement 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.OrderSupplement order_supplement = 7;</code>
   */
  com.consorsbank.module.tapi.grpc.trading.OrderSupplement getOrderSupplement();

  /**
   * <pre>
   **
   * Cach quotation 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.CashQuotation cash_quotation = 8;</code>
   */
  int getCashQuotationValue();
  /**
   * <pre>
   **
   * Cach quotation 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.CashQuotation cash_quotation = 8;</code>
   */
  com.consorsbank.module.tapi.grpc.trading.CashQuotation getCashQuotation();

  /**
   * <pre>
   **
   * Order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date validity_date = 9;</code>
   */
  boolean hasValidityDate();
  /**
   * <pre>
   **
   * Order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date validity_date = 9;</code>
   */
  com.consorsbank.module.tapi.grpc.common.Date getValidityDate();
  /**
   * <pre>
   **
   * Order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date validity_date = 9;</code>
   */
  com.consorsbank.module.tapi.grpc.common.DateOrBuilder getValidityDateOrBuilder();

  /**
   * <pre>
   **
   * Limit value 
   * </pre>
   *
   * <code>double limit = 10;</code>
   */
  double getLimit();

  /**
   * <pre>
   **
   * Stop value. This value can be used only together with StopMarket, StopLimit and OneCancelOter order models.
   * </pre>
   *
   * <code>double stop = 11;</code>
   */
  double getStop();

  /**
   * <pre>
   **
   * Stop limit used in the StopLimit and OneCancelOther order models
   * </pre>
   *
   * <code>double stop_limit = 12;</code>
   */
  double getStopLimit();

  /**
   * <pre>
   **
   * Traling distance in traling notation units or empty value 
   * </pre>
   *
   * <code>double trailing_distance = 13;</code>
   */
  double getTrailingDistance();

  /**
   * <pre>
   **
   * Trailing notation for the trailing orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.TrailingNotation trailing_notation = 14;</code>
   */
  int getTrailingNotationValue();
  /**
   * <pre>
   **
   * Trailing notation for the trailing orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.TrailingNotation trailing_notation = 14;</code>
   */
  com.consorsbank.module.tapi.grpc.trading.TrailingNotation getTrailingNotation();

  /**
   * <pre>
   **
   * Trailing limit tolerance for the trailing orders 
   * </pre>
   *
   * <code>double trailing_limit_tolerance = 15;</code>
   */
  double getTrailingLimitTolerance();

  /**
   * <pre>
   **
   * Dripping quantity #pro# only 
   * </pre>
   *
   * <code>double dripping_quantity = 16;</code>
   */
  double getDrippingQuantity();

  /**
   * <pre>
   **
   * Position id of the depot position. 
   * It used only for sale certainly securities from depot
   * </pre>
   *
   * <code>string position_id = 17;</code>
   */
  java.lang.String getPositionId();
  /**
   * <pre>
   **
   * Position id of the depot position. 
   * It used only for sale certainly securities from depot
   * </pre>
   *
   * <code>string position_id = 17;</code>
   */
  com.google.protobuf.ByteString
      getPositionIdBytes();

  /**
   * <pre>
   **
   * Validation flag. 
   * If value is WITHOUT_VALIDATION then backend system sends order actions directly to the market. + 
   * If value is VALIDATE_ONLY then backend system doesn't send order actions to the market, but validate order parameters. +
   * If value is VALIDATE_WITH_TOTAL_COSTS then order will validated by backend system and request total costs for the order. +
   * If value is VALIDATE_WITH_DETAIL_COSTS then order will validated by backend system and request detail costs for the order. +
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Validation validation = 18;</code>
   */
  int getValidationValue();
  /**
   * <pre>
   **
   * Validation flag. 
   * If value is WITHOUT_VALIDATION then backend system sends order actions directly to the market. + 
   * If value is VALIDATE_ONLY then backend system doesn't send order actions to the market, but validate order parameters. +
   * If value is VALIDATE_WITH_TOTAL_COSTS then order will validated by backend system and request total costs for the order. +
   * If value is VALIDATE_WITH_DETAIL_COSTS then order will validated by backend system and request detail costs for the order. +
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Validation validation = 18;</code>
   */
  com.consorsbank.module.tapi.grpc.order.Validation getValidation();

  /**
   * <pre>
   **
   * Risk class override flag. If true then allowes override user risk class 
   * </pre>
   *
   * <code>bool risk_class_override = 19;</code>
   */
  boolean getRiskClassOverride();

  /**
   * <pre>
   **
   * Target market override flag. If true then allowes override target market 
   * </pre>
   *
   * <code>bool target_market_override = 20;</code>
   */
  boolean getTargetMarketOverride();

  /**
   * <pre>
   **
   * Tax non trasparent override flag. If true then allowes override tax intransparesity 
   * </pre>
   *
   * <code>bool tax_nontransparent_override = 21;</code>
   */
  boolean getTaxNontransparentOverride();

  /**
   * <pre>
   **
   * Accept additinal fees flag. If true then allowes accept non transparent fees 
   * </pre>
   *
   * <code>bool accept_additional_fees = 22;</code>
   */
  boolean getAcceptAdditionalFees();

  /**
   * <pre>
   **
   * Closed realestate fond override. If true then allowes sell fonds over fds 
   * </pre>
   *
   * <code>bool closed_realestate_fond_override = 23;</code>
   */
  boolean getClosedRealestateFondOverride();

  /**
   * <pre>
   **
   * Inactive order flag, #pro# only. If true then order market as inactive and don't routed to the marker.
   * To activate order please use ActivateOrder function 
   * </pre>
   *
   * <code>bool inactive = 24;</code>
   */
  boolean getInactive();
}
