// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SecurityService.proto

package com.consorsbank.module.tapi.grpc.security;

/**
 * <pre>
 **
 * Security stock exchange info represents trading information
 * about one security on the one market
 * </pre>
 *
 * Protobuf type {@code com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo}
 */
public  final class SecurityStockExchangeInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo)
    SecurityStockExchangeInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SecurityStockExchangeInfo.newBuilder() to construct.
  private SecurityStockExchangeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SecurityStockExchangeInfo() {
    buyLimitToken_ = 0;
    sellLimitToken_ = 0;
    buyTradingTypes_ = java.util.Collections.emptyList();
    sellTradingTypes_ = java.util.Collections.emptyList();
    shortMode_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SecurityStockExchangeInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder subBuilder = null;
            if (stockExchange_ != null) {
              subBuilder = stockExchange_.toBuilder();
            }
            stockExchange_ = input.readMessage(com.consorsbank.module.tapi.grpc.stock.StockExchange.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(stockExchange_);
              stockExchange_ = subBuilder.buildPartial();
            }

            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            buyLimitToken_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            sellLimitToken_ = rawValue;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              buyTradingTypes_ = new java.util.ArrayList<com.consorsbank.module.tapi.grpc.trading.TradingPossibility>();
              mutable_bitField0_ |= 0x00000008;
            }
            buyTradingTypes_.add(
                input.readMessage(com.consorsbank.module.tapi.grpc.trading.TradingPossibility.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              sellTradingTypes_ = new java.util.ArrayList<com.consorsbank.module.tapi.grpc.trading.TradingPossibility>();
              mutable_bitField0_ |= 0x00000010;
            }
            sellTradingTypes_.add(
                input.readMessage(com.consorsbank.module.tapi.grpc.trading.TradingPossibility.parser(), extensionRegistry));
            break;
          }
          case 50: {
            com.consorsbank.module.tapi.grpc.common.Date.Builder subBuilder = null;
            if (maximalOrderDate_ != null) {
              subBuilder = maximalOrderDate_.toBuilder();
            }
            maximalOrderDate_ = input.readMessage(com.consorsbank.module.tapi.grpc.common.Date.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(maximalOrderDate_);
              maximalOrderDate_ = subBuilder.buildPartial();
            }

            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            shortMode_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        buyTradingTypes_ = java.util.Collections.unmodifiableList(buyTradingTypes_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        sellTradingTypes_ = java.util.Collections.unmodifiableList(sellTradingTypes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityStockExchangeInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityStockExchangeInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.class, com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.Builder.class);
  }

  /**
   * <pre>
   **
   * Short mode gives information amout security shortability 
   * on the selected market.
   * </pre>
   *
   * Protobuf enum {@code com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode}
   */
  public enum ShortMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** Undefined short selling 
     * </pre>
     *
     * <code>NO_SHORT_MODE = 0;</code>
     */
    NO_SHORT_MODE(0),
    /**
     * <pre>
     ** Short selling is possible
     * </pre>
     *
     * <code>YES = 1;</code>
     */
    YES(1),
    /**
     * <pre>
     ** No short selling 
     * </pre>
     *
     * <code>NO = 2;</code>
     */
    NO(2),
    /**
     * <pre>
     ** Temporary no short selling 
     * </pre>
     *
     * <code>TEMPORARY_NO = 3;</code>
     */
    TEMPORARY_NO(3),
    /**
     * <pre>
     ** Intraday short selling 
     * </pre>
     *
     * <code>INTRADAY = 4;</code>
     */
    INTRADAY(4),
    /**
     * <pre>
     ** Overnight short selling 
     * </pre>
     *
     * <code>OVERNIGHT = 5;</code>
     */
    OVERNIGHT(5),
    /**
     * <pre>
     ** Intraday and Overnight short selling 
     * </pre>
     *
     * <code>INTRADAY_AND_OVERNIGHT = 6;</code>
     */
    INTRADAY_AND_OVERNIGHT(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** Undefined short selling 
     * </pre>
     *
     * <code>NO_SHORT_MODE = 0;</code>
     */
    public static final int NO_SHORT_MODE_VALUE = 0;
    /**
     * <pre>
     ** Short selling is possible
     * </pre>
     *
     * <code>YES = 1;</code>
     */
    public static final int YES_VALUE = 1;
    /**
     * <pre>
     ** No short selling 
     * </pre>
     *
     * <code>NO = 2;</code>
     */
    public static final int NO_VALUE = 2;
    /**
     * <pre>
     ** Temporary no short selling 
     * </pre>
     *
     * <code>TEMPORARY_NO = 3;</code>
     */
    public static final int TEMPORARY_NO_VALUE = 3;
    /**
     * <pre>
     ** Intraday short selling 
     * </pre>
     *
     * <code>INTRADAY = 4;</code>
     */
    public static final int INTRADAY_VALUE = 4;
    /**
     * <pre>
     ** Overnight short selling 
     * </pre>
     *
     * <code>OVERNIGHT = 5;</code>
     */
    public static final int OVERNIGHT_VALUE = 5;
    /**
     * <pre>
     ** Intraday and Overnight short selling 
     * </pre>
     *
     * <code>INTRADAY_AND_OVERNIGHT = 6;</code>
     */
    public static final int INTRADAY_AND_OVERNIGHT_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ShortMode valueOf(int value) {
      return forNumber(value);
    }

    public static ShortMode forNumber(int value) {
      switch (value) {
        case 0: return NO_SHORT_MODE;
        case 1: return YES;
        case 2: return NO;
        case 3: return TEMPORARY_NO;
        case 4: return INTRADAY;
        case 5: return OVERNIGHT;
        case 6: return INTRADAY_AND_OVERNIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ShortMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ShortMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ShortMode>() {
            public ShortMode findValueByNumber(int number) {
              return ShortMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final ShortMode[] VALUES = values();

    public static ShortMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ShortMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode)
  }

  /**
   * <pre>
   ** 
   * Limit token represents a possibility to trade on the 
   * short term markets (AcceptQuote) and long term markets (AddOrder)
   * </pre>
   *
   * Protobuf enum {@code com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken}
   */
  public enum LimitToken
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     ** AcceptQuote and AddOrder possible 
     * </pre>
     *
     * <code>LIMIT_AND_QUOTE = 0;</code>
     */
    LIMIT_AND_QUOTE(0),
    /**
     * <pre>
     ** AcceptQuote only possible 
     * </pre>
     *
     * <code>QUOTE_ONLY = 1;</code>
     */
    QUOTE_ONLY(1),
    /**
     * <pre>
     ** AddOrder only possible 
     * </pre>
     *
     * <code>LIMIT_ONLY = 2;</code>
     */
    LIMIT_ONLY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     ** AcceptQuote and AddOrder possible 
     * </pre>
     *
     * <code>LIMIT_AND_QUOTE = 0;</code>
     */
    public static final int LIMIT_AND_QUOTE_VALUE = 0;
    /**
     * <pre>
     ** AcceptQuote only possible 
     * </pre>
     *
     * <code>QUOTE_ONLY = 1;</code>
     */
    public static final int QUOTE_ONLY_VALUE = 1;
    /**
     * <pre>
     ** AddOrder only possible 
     * </pre>
     *
     * <code>LIMIT_ONLY = 2;</code>
     */
    public static final int LIMIT_ONLY_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LimitToken valueOf(int value) {
      return forNumber(value);
    }

    public static LimitToken forNumber(int value) {
      switch (value) {
        case 0: return LIMIT_AND_QUOTE;
        case 1: return QUOTE_ONLY;
        case 2: return LIMIT_ONLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LimitToken>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LimitToken> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LimitToken>() {
            public LimitToken findValueByNumber(int number) {
              return LimitToken.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.getDescriptor().getEnumTypes().get(1);
    }

    private static final LimitToken[] VALUES = values();

    public static LimitToken valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LimitToken(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken)
  }

  private int bitField0_;
  public static final int STOCK_EXCHANGE_FIELD_NUMBER = 1;
  private com.consorsbank.module.tapi.grpc.stock.StockExchange stockExchange_;
  /**
   * <pre>
   **  Stockexchange (id und issuer)  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
   */
  public boolean hasStockExchange() {
    return stockExchange_ != null;
  }
  /**
   * <pre>
   **  Stockexchange (id und issuer)  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
   */
  public com.consorsbank.module.tapi.grpc.stock.StockExchange getStockExchange() {
    return stockExchange_ == null ? com.consorsbank.module.tapi.grpc.stock.StockExchange.getDefaultInstance() : stockExchange_;
  }
  /**
   * <pre>
   **  Stockexchange (id und issuer)  
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
   */
  public com.consorsbank.module.tapi.grpc.stock.StockExchangeOrBuilder getStockExchangeOrBuilder() {
    return getStockExchange();
  }

  public static final int BUY_LIMIT_TOKEN_FIELD_NUMBER = 2;
  private int buyLimitToken_;
  /**
   * <pre>
   ** Possible limit token for buy orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
   */
  public int getBuyLimitTokenValue() {
    return buyLimitToken_;
  }
  /**
   * <pre>
   ** Possible limit token for buy orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken getBuyLimitToken() {
    @SuppressWarnings("deprecation")
    com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.valueOf(buyLimitToken_);
    return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.UNRECOGNIZED : result;
  }

  public static final int SELL_LIMIT_TOKEN_FIELD_NUMBER = 3;
  private int sellLimitToken_;
  /**
   * <pre>
   ** Possible limit token for sell orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
   */
  public int getSellLimitTokenValue() {
    return sellLimitToken_;
  }
  /**
   * <pre>
   ** Possible limit token for sell orders 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken getSellLimitToken() {
    @SuppressWarnings("deprecation")
    com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.valueOf(sellLimitToken_);
    return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.UNRECOGNIZED : result;
  }

  public static final int BUY_TRADING_TYPES_FIELD_NUMBER = 4;
  private java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> buyTradingTypes_;
  /**
   * <pre>
   ** Buy trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
   */
  public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> getBuyTradingTypesList() {
    return buyTradingTypes_;
  }
  /**
   * <pre>
   ** Buy trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
   */
  public java.util.List<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
      getBuyTradingTypesOrBuilderList() {
    return buyTradingTypes_;
  }
  /**
   * <pre>
   ** Buy trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
   */
  public int getBuyTradingTypesCount() {
    return buyTradingTypes_.size();
  }
  /**
   * <pre>
   ** Buy trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
   */
  public com.consorsbank.module.tapi.grpc.trading.TradingPossibility getBuyTradingTypes(int index) {
    return buyTradingTypes_.get(index);
  }
  /**
   * <pre>
   ** Buy trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
   */
  public com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder getBuyTradingTypesOrBuilder(
      int index) {
    return buyTradingTypes_.get(index);
  }

  public static final int SELL_TRADING_TYPES_FIELD_NUMBER = 5;
  private java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> sellTradingTypes_;
  /**
   * <pre>
   ** Sell trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
   */
  public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> getSellTradingTypesList() {
    return sellTradingTypes_;
  }
  /**
   * <pre>
   ** Sell trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
   */
  public java.util.List<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
      getSellTradingTypesOrBuilderList() {
    return sellTradingTypes_;
  }
  /**
   * <pre>
   ** Sell trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
   */
  public int getSellTradingTypesCount() {
    return sellTradingTypes_.size();
  }
  /**
   * <pre>
   ** Sell trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
   */
  public com.consorsbank.module.tapi.grpc.trading.TradingPossibility getSellTradingTypes(int index) {
    return sellTradingTypes_.get(index);
  }
  /**
   * <pre>
   ** Sell trading data (order models, order supplements, trailing notations)  
   * </pre>
   *
   * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
   */
  public com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder getSellTradingTypesOrBuilder(
      int index) {
    return sellTradingTypes_.get(index);
  }

  public static final int MAXIMAL_ORDER_DATE_FIELD_NUMBER = 6;
  private com.consorsbank.module.tapi.grpc.common.Date maximalOrderDate_;
  /**
   * <pre>
   ** Maximal order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
   */
  public boolean hasMaximalOrderDate() {
    return maximalOrderDate_ != null;
  }
  /**
   * <pre>
   ** Maximal order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.Date getMaximalOrderDate() {
    return maximalOrderDate_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : maximalOrderDate_;
  }
  /**
   * <pre>
   ** Maximal order validity date 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
   */
  public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getMaximalOrderDateOrBuilder() {
    return getMaximalOrderDate();
  }

  public static final int SHORT_MODE_FIELD_NUMBER = 7;
  private int shortMode_;
  /**
   * <pre>
   ** Short selling mode 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
   */
  public int getShortModeValue() {
    return shortMode_;
  }
  /**
   * <pre>
   ** Short selling mode 
   * </pre>
   *
   * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
   */
  public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode getShortMode() {
    @SuppressWarnings("deprecation")
    com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.valueOf(shortMode_);
    return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (stockExchange_ != null) {
      output.writeMessage(1, getStockExchange());
    }
    if (buyLimitToken_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.LIMIT_AND_QUOTE.getNumber()) {
      output.writeEnum(2, buyLimitToken_);
    }
    if (sellLimitToken_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.LIMIT_AND_QUOTE.getNumber()) {
      output.writeEnum(3, sellLimitToken_);
    }
    for (int i = 0; i < buyTradingTypes_.size(); i++) {
      output.writeMessage(4, buyTradingTypes_.get(i));
    }
    for (int i = 0; i < sellTradingTypes_.size(); i++) {
      output.writeMessage(5, sellTradingTypes_.get(i));
    }
    if (maximalOrderDate_ != null) {
      output.writeMessage(6, getMaximalOrderDate());
    }
    if (shortMode_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.NO_SHORT_MODE.getNumber()) {
      output.writeEnum(7, shortMode_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (stockExchange_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStockExchange());
    }
    if (buyLimitToken_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.LIMIT_AND_QUOTE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, buyLimitToken_);
    }
    if (sellLimitToken_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.LIMIT_AND_QUOTE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, sellLimitToken_);
    }
    for (int i = 0; i < buyTradingTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, buyTradingTypes_.get(i));
    }
    for (int i = 0; i < sellTradingTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, sellTradingTypes_.get(i));
    }
    if (maximalOrderDate_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getMaximalOrderDate());
    }
    if (shortMode_ != com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.NO_SHORT_MODE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, shortMode_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo)) {
      return super.equals(obj);
    }
    com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo other = (com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo) obj;

    boolean result = true;
    result = result && (hasStockExchange() == other.hasStockExchange());
    if (hasStockExchange()) {
      result = result && getStockExchange()
          .equals(other.getStockExchange());
    }
    result = result && buyLimitToken_ == other.buyLimitToken_;
    result = result && sellLimitToken_ == other.sellLimitToken_;
    result = result && getBuyTradingTypesList()
        .equals(other.getBuyTradingTypesList());
    result = result && getSellTradingTypesList()
        .equals(other.getSellTradingTypesList());
    result = result && (hasMaximalOrderDate() == other.hasMaximalOrderDate());
    if (hasMaximalOrderDate()) {
      result = result && getMaximalOrderDate()
          .equals(other.getMaximalOrderDate());
    }
    result = result && shortMode_ == other.shortMode_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStockExchange()) {
      hash = (37 * hash) + STOCK_EXCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getStockExchange().hashCode();
    }
    hash = (37 * hash) + BUY_LIMIT_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + buyLimitToken_;
    hash = (37 * hash) + SELL_LIMIT_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + sellLimitToken_;
    if (getBuyTradingTypesCount() > 0) {
      hash = (37 * hash) + BUY_TRADING_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getBuyTradingTypesList().hashCode();
    }
    if (getSellTradingTypesCount() > 0) {
      hash = (37 * hash) + SELL_TRADING_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getSellTradingTypesList().hashCode();
    }
    if (hasMaximalOrderDate()) {
      hash = (37 * hash) + MAXIMAL_ORDER_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getMaximalOrderDate().hashCode();
    }
    hash = (37 * hash) + SHORT_MODE_FIELD_NUMBER;
    hash = (53 * hash) + shortMode_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   **
   * Security stock exchange info represents trading information
   * about one security on the one market
   * </pre>
   *
   * Protobuf type {@code com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo)
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityStockExchangeInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityStockExchangeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.class, com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.Builder.class);
    }

    // Construct using com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBuyTradingTypesFieldBuilder();
        getSellTradingTypesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (stockExchangeBuilder_ == null) {
        stockExchange_ = null;
      } else {
        stockExchange_ = null;
        stockExchangeBuilder_ = null;
      }
      buyLimitToken_ = 0;

      sellLimitToken_ = 0;

      if (buyTradingTypesBuilder_ == null) {
        buyTradingTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        buyTradingTypesBuilder_.clear();
      }
      if (sellTradingTypesBuilder_ == null) {
        sellTradingTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        sellTradingTypesBuilder_.clear();
      }
      if (maximalOrderDateBuilder_ == null) {
        maximalOrderDate_ = null;
      } else {
        maximalOrderDate_ = null;
        maximalOrderDateBuilder_ = null;
      }
      shortMode_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.consorsbank.module.tapi.grpc.security.SecurityService.internal_static_com_consorsbank_module_tapi_grpc_SecurityStockExchangeInfo_descriptor;
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo getDefaultInstanceForType() {
      return com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.getDefaultInstance();
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo build() {
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo buildPartial() {
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo result = new com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (stockExchangeBuilder_ == null) {
        result.stockExchange_ = stockExchange_;
      } else {
        result.stockExchange_ = stockExchangeBuilder_.build();
      }
      result.buyLimitToken_ = buyLimitToken_;
      result.sellLimitToken_ = sellLimitToken_;
      if (buyTradingTypesBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          buyTradingTypes_ = java.util.Collections.unmodifiableList(buyTradingTypes_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.buyTradingTypes_ = buyTradingTypes_;
      } else {
        result.buyTradingTypes_ = buyTradingTypesBuilder_.build();
      }
      if (sellTradingTypesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          sellTradingTypes_ = java.util.Collections.unmodifiableList(sellTradingTypes_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.sellTradingTypes_ = sellTradingTypes_;
      } else {
        result.sellTradingTypes_ = sellTradingTypesBuilder_.build();
      }
      if (maximalOrderDateBuilder_ == null) {
        result.maximalOrderDate_ = maximalOrderDate_;
      } else {
        result.maximalOrderDate_ = maximalOrderDateBuilder_.build();
      }
      result.shortMode_ = shortMode_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo) {
        return mergeFrom((com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo other) {
      if (other == com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.getDefaultInstance()) return this;
      if (other.hasStockExchange()) {
        mergeStockExchange(other.getStockExchange());
      }
      if (other.buyLimitToken_ != 0) {
        setBuyLimitTokenValue(other.getBuyLimitTokenValue());
      }
      if (other.sellLimitToken_ != 0) {
        setSellLimitTokenValue(other.getSellLimitTokenValue());
      }
      if (buyTradingTypesBuilder_ == null) {
        if (!other.buyTradingTypes_.isEmpty()) {
          if (buyTradingTypes_.isEmpty()) {
            buyTradingTypes_ = other.buyTradingTypes_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBuyTradingTypesIsMutable();
            buyTradingTypes_.addAll(other.buyTradingTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.buyTradingTypes_.isEmpty()) {
          if (buyTradingTypesBuilder_.isEmpty()) {
            buyTradingTypesBuilder_.dispose();
            buyTradingTypesBuilder_ = null;
            buyTradingTypes_ = other.buyTradingTypes_;
            bitField0_ = (bitField0_ & ~0x00000008);
            buyTradingTypesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBuyTradingTypesFieldBuilder() : null;
          } else {
            buyTradingTypesBuilder_.addAllMessages(other.buyTradingTypes_);
          }
        }
      }
      if (sellTradingTypesBuilder_ == null) {
        if (!other.sellTradingTypes_.isEmpty()) {
          if (sellTradingTypes_.isEmpty()) {
            sellTradingTypes_ = other.sellTradingTypes_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSellTradingTypesIsMutable();
            sellTradingTypes_.addAll(other.sellTradingTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.sellTradingTypes_.isEmpty()) {
          if (sellTradingTypesBuilder_.isEmpty()) {
            sellTradingTypesBuilder_.dispose();
            sellTradingTypesBuilder_ = null;
            sellTradingTypes_ = other.sellTradingTypes_;
            bitField0_ = (bitField0_ & ~0x00000010);
            sellTradingTypesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSellTradingTypesFieldBuilder() : null;
          } else {
            sellTradingTypesBuilder_.addAllMessages(other.sellTradingTypes_);
          }
        }
      }
      if (other.hasMaximalOrderDate()) {
        mergeMaximalOrderDate(other.getMaximalOrderDate());
      }
      if (other.shortMode_ != 0) {
        setShortModeValue(other.getShortModeValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.consorsbank.module.tapi.grpc.stock.StockExchange stockExchange_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.stock.StockExchange, com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder, com.consorsbank.module.tapi.grpc.stock.StockExchangeOrBuilder> stockExchangeBuilder_;
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public boolean hasStockExchange() {
      return stockExchangeBuilder_ != null || stockExchange_ != null;
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.stock.StockExchange getStockExchange() {
      if (stockExchangeBuilder_ == null) {
        return stockExchange_ == null ? com.consorsbank.module.tapi.grpc.stock.StockExchange.getDefaultInstance() : stockExchange_;
      } else {
        return stockExchangeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public Builder setStockExchange(com.consorsbank.module.tapi.grpc.stock.StockExchange value) {
      if (stockExchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        stockExchange_ = value;
        onChanged();
      } else {
        stockExchangeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public Builder setStockExchange(
        com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder builderForValue) {
      if (stockExchangeBuilder_ == null) {
        stockExchange_ = builderForValue.build();
        onChanged();
      } else {
        stockExchangeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public Builder mergeStockExchange(com.consorsbank.module.tapi.grpc.stock.StockExchange value) {
      if (stockExchangeBuilder_ == null) {
        if (stockExchange_ != null) {
          stockExchange_ =
            com.consorsbank.module.tapi.grpc.stock.StockExchange.newBuilder(stockExchange_).mergeFrom(value).buildPartial();
        } else {
          stockExchange_ = value;
        }
        onChanged();
      } else {
        stockExchangeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public Builder clearStockExchange() {
      if (stockExchangeBuilder_ == null) {
        stockExchange_ = null;
        onChanged();
      } else {
        stockExchange_ = null;
        stockExchangeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder getStockExchangeBuilder() {
      
      onChanged();
      return getStockExchangeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    public com.consorsbank.module.tapi.grpc.stock.StockExchangeOrBuilder getStockExchangeOrBuilder() {
      if (stockExchangeBuilder_ != null) {
        return stockExchangeBuilder_.getMessageOrBuilder();
      } else {
        return stockExchange_ == null ?
            com.consorsbank.module.tapi.grpc.stock.StockExchange.getDefaultInstance() : stockExchange_;
      }
    }
    /**
     * <pre>
     **  Stockexchange (id und issuer)  
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.StockExchange stock_exchange = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.stock.StockExchange, com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder, com.consorsbank.module.tapi.grpc.stock.StockExchangeOrBuilder> 
        getStockExchangeFieldBuilder() {
      if (stockExchangeBuilder_ == null) {
        stockExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.stock.StockExchange, com.consorsbank.module.tapi.grpc.stock.StockExchange.Builder, com.consorsbank.module.tapi.grpc.stock.StockExchangeOrBuilder>(
                getStockExchange(),
                getParentForChildren(),
                isClean());
        stockExchange_ = null;
      }
      return stockExchangeBuilder_;
    }

    private int buyLimitToken_ = 0;
    /**
     * <pre>
     ** Possible limit token for buy orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
     */
    public int getBuyLimitTokenValue() {
      return buyLimitToken_;
    }
    /**
     * <pre>
     ** Possible limit token for buy orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
     */
    public Builder setBuyLimitTokenValue(int value) {
      buyLimitToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Possible limit token for buy orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken getBuyLimitToken() {
      @SuppressWarnings("deprecation")
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.valueOf(buyLimitToken_);
      return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ** Possible limit token for buy orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
     */
    public Builder setBuyLimitToken(com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      buyLimitToken_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Possible limit token for buy orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken buy_limit_token = 2;</code>
     */
    public Builder clearBuyLimitToken() {
      
      buyLimitToken_ = 0;
      onChanged();
      return this;
    }

    private int sellLimitToken_ = 0;
    /**
     * <pre>
     ** Possible limit token for sell orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
     */
    public int getSellLimitTokenValue() {
      return sellLimitToken_;
    }
    /**
     * <pre>
     ** Possible limit token for sell orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
     */
    public Builder setSellLimitTokenValue(int value) {
      sellLimitToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Possible limit token for sell orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken getSellLimitToken() {
      @SuppressWarnings("deprecation")
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.valueOf(sellLimitToken_);
      return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ** Possible limit token for sell orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
     */
    public Builder setSellLimitToken(com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.LimitToken value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      sellLimitToken_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Possible limit token for sell orders 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.LimitToken sell_limit_token = 3;</code>
     */
    public Builder clearSellLimitToken() {
      
      sellLimitToken_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> buyTradingTypes_ =
      java.util.Collections.emptyList();
    private void ensureBuyTradingTypesIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        buyTradingTypes_ = new java.util.ArrayList<com.consorsbank.module.tapi.grpc.trading.TradingPossibility>(buyTradingTypes_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> buyTradingTypesBuilder_;

    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> getBuyTradingTypesList() {
      if (buyTradingTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(buyTradingTypes_);
      } else {
        return buyTradingTypesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public int getBuyTradingTypesCount() {
      if (buyTradingTypesBuilder_ == null) {
        return buyTradingTypes_.size();
      } else {
        return buyTradingTypesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility getBuyTradingTypes(int index) {
      if (buyTradingTypesBuilder_ == null) {
        return buyTradingTypes_.get(index);
      } else {
        return buyTradingTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder setBuyTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (buyTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.set(index, value);
        onChanged();
      } else {
        buyTradingTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder setBuyTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (buyTradingTypesBuilder_ == null) {
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        buyTradingTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder addBuyTradingTypes(com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (buyTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.add(value);
        onChanged();
      } else {
        buyTradingTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder addBuyTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (buyTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.add(index, value);
        onChanged();
      } else {
        buyTradingTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder addBuyTradingTypes(
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (buyTradingTypesBuilder_ == null) {
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.add(builderForValue.build());
        onChanged();
      } else {
        buyTradingTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder addBuyTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (buyTradingTypesBuilder_ == null) {
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        buyTradingTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder addAllBuyTradingTypes(
        java.lang.Iterable<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibility> values) {
      if (buyTradingTypesBuilder_ == null) {
        ensureBuyTradingTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, buyTradingTypes_);
        onChanged();
      } else {
        buyTradingTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder clearBuyTradingTypes() {
      if (buyTradingTypesBuilder_ == null) {
        buyTradingTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        buyTradingTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public Builder removeBuyTradingTypes(int index) {
      if (buyTradingTypesBuilder_ == null) {
        ensureBuyTradingTypesIsMutable();
        buyTradingTypes_.remove(index);
        onChanged();
      } else {
        buyTradingTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder getBuyTradingTypesBuilder(
        int index) {
      return getBuyTradingTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder getBuyTradingTypesOrBuilder(
        int index) {
      if (buyTradingTypesBuilder_ == null) {
        return buyTradingTypes_.get(index);  } else {
        return buyTradingTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public java.util.List<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
         getBuyTradingTypesOrBuilderList() {
      if (buyTradingTypesBuilder_ != null) {
        return buyTradingTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(buyTradingTypes_);
      }
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder addBuyTradingTypesBuilder() {
      return getBuyTradingTypesFieldBuilder().addBuilder(
          com.consorsbank.module.tapi.grpc.trading.TradingPossibility.getDefaultInstance());
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder addBuyTradingTypesBuilder(
        int index) {
      return getBuyTradingTypesFieldBuilder().addBuilder(
          index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.getDefaultInstance());
    }
    /**
     * <pre>
     ** Buy trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility buy_trading_types = 4;</code>
     */
    public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder> 
         getBuyTradingTypesBuilderList() {
      return getBuyTradingTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
        getBuyTradingTypesFieldBuilder() {
      if (buyTradingTypesBuilder_ == null) {
        buyTradingTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder>(
                buyTradingTypes_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        buyTradingTypes_ = null;
      }
      return buyTradingTypesBuilder_;
    }

    private java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> sellTradingTypes_ =
      java.util.Collections.emptyList();
    private void ensureSellTradingTypesIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        sellTradingTypes_ = new java.util.ArrayList<com.consorsbank.module.tapi.grpc.trading.TradingPossibility>(sellTradingTypes_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> sellTradingTypesBuilder_;

    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility> getSellTradingTypesList() {
      if (sellTradingTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sellTradingTypes_);
      } else {
        return sellTradingTypesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public int getSellTradingTypesCount() {
      if (sellTradingTypesBuilder_ == null) {
        return sellTradingTypes_.size();
      } else {
        return sellTradingTypesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility getSellTradingTypes(int index) {
      if (sellTradingTypesBuilder_ == null) {
        return sellTradingTypes_.get(index);
      } else {
        return sellTradingTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder setSellTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (sellTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.set(index, value);
        onChanged();
      } else {
        sellTradingTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder setSellTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (sellTradingTypesBuilder_ == null) {
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        sellTradingTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder addSellTradingTypes(com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (sellTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.add(value);
        onChanged();
      } else {
        sellTradingTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder addSellTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility value) {
      if (sellTradingTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.add(index, value);
        onChanged();
      } else {
        sellTradingTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder addSellTradingTypes(
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (sellTradingTypesBuilder_ == null) {
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.add(builderForValue.build());
        onChanged();
      } else {
        sellTradingTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder addSellTradingTypes(
        int index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder builderForValue) {
      if (sellTradingTypesBuilder_ == null) {
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        sellTradingTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder addAllSellTradingTypes(
        java.lang.Iterable<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibility> values) {
      if (sellTradingTypesBuilder_ == null) {
        ensureSellTradingTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sellTradingTypes_);
        onChanged();
      } else {
        sellTradingTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder clearSellTradingTypes() {
      if (sellTradingTypesBuilder_ == null) {
        sellTradingTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        sellTradingTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public Builder removeSellTradingTypes(int index) {
      if (sellTradingTypesBuilder_ == null) {
        ensureSellTradingTypesIsMutable();
        sellTradingTypes_.remove(index);
        onChanged();
      } else {
        sellTradingTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder getSellTradingTypesBuilder(
        int index) {
      return getSellTradingTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder getSellTradingTypesOrBuilder(
        int index) {
      if (sellTradingTypesBuilder_ == null) {
        return sellTradingTypes_.get(index);  } else {
        return sellTradingTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public java.util.List<? extends com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
         getSellTradingTypesOrBuilderList() {
      if (sellTradingTypesBuilder_ != null) {
        return sellTradingTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sellTradingTypes_);
      }
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder addSellTradingTypesBuilder() {
      return getSellTradingTypesFieldBuilder().addBuilder(
          com.consorsbank.module.tapi.grpc.trading.TradingPossibility.getDefaultInstance());
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder addSellTradingTypesBuilder(
        int index) {
      return getSellTradingTypesFieldBuilder().addBuilder(
          index, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.getDefaultInstance());
    }
    /**
     * <pre>
     ** Sell trading data (order models, order supplements, trailing notations)  
     * </pre>
     *
     * <code>repeated .com.consorsbank.module.tapi.grpc.TradingPossibility sell_trading_types = 5;</code>
     */
    public java.util.List<com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder> 
         getSellTradingTypesBuilderList() {
      return getSellTradingTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder> 
        getSellTradingTypesFieldBuilder() {
      if (sellTradingTypesBuilder_ == null) {
        sellTradingTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.trading.TradingPossibility, com.consorsbank.module.tapi.grpc.trading.TradingPossibility.Builder, com.consorsbank.module.tapi.grpc.trading.TradingPossibilityOrBuilder>(
                sellTradingTypes_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        sellTradingTypes_ = null;
      }
      return sellTradingTypesBuilder_;
    }

    private com.consorsbank.module.tapi.grpc.common.Date maximalOrderDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> maximalOrderDateBuilder_;
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public boolean hasMaximalOrderDate() {
      return maximalOrderDateBuilder_ != null || maximalOrderDate_ != null;
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date getMaximalOrderDate() {
      if (maximalOrderDateBuilder_ == null) {
        return maximalOrderDate_ == null ? com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : maximalOrderDate_;
      } else {
        return maximalOrderDateBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public Builder setMaximalOrderDate(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (maximalOrderDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maximalOrderDate_ = value;
        onChanged();
      } else {
        maximalOrderDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public Builder setMaximalOrderDate(
        com.consorsbank.module.tapi.grpc.common.Date.Builder builderForValue) {
      if (maximalOrderDateBuilder_ == null) {
        maximalOrderDate_ = builderForValue.build();
        onChanged();
      } else {
        maximalOrderDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public Builder mergeMaximalOrderDate(com.consorsbank.module.tapi.grpc.common.Date value) {
      if (maximalOrderDateBuilder_ == null) {
        if (maximalOrderDate_ != null) {
          maximalOrderDate_ =
            com.consorsbank.module.tapi.grpc.common.Date.newBuilder(maximalOrderDate_).mergeFrom(value).buildPartial();
        } else {
          maximalOrderDate_ = value;
        }
        onChanged();
      } else {
        maximalOrderDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public Builder clearMaximalOrderDate() {
      if (maximalOrderDateBuilder_ == null) {
        maximalOrderDate_ = null;
        onChanged();
      } else {
        maximalOrderDate_ = null;
        maximalOrderDateBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.Date.Builder getMaximalOrderDateBuilder() {
      
      onChanged();
      return getMaximalOrderDateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    public com.consorsbank.module.tapi.grpc.common.DateOrBuilder getMaximalOrderDateOrBuilder() {
      if (maximalOrderDateBuilder_ != null) {
        return maximalOrderDateBuilder_.getMessageOrBuilder();
      } else {
        return maximalOrderDate_ == null ?
            com.consorsbank.module.tapi.grpc.common.Date.getDefaultInstance() : maximalOrderDate_;
      }
    }
    /**
     * <pre>
     ** Maximal order validity date 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.Date maximal_order_date = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder> 
        getMaximalOrderDateFieldBuilder() {
      if (maximalOrderDateBuilder_ == null) {
        maximalOrderDateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.consorsbank.module.tapi.grpc.common.Date, com.consorsbank.module.tapi.grpc.common.Date.Builder, com.consorsbank.module.tapi.grpc.common.DateOrBuilder>(
                getMaximalOrderDate(),
                getParentForChildren(),
                isClean());
        maximalOrderDate_ = null;
      }
      return maximalOrderDateBuilder_;
    }

    private int shortMode_ = 0;
    /**
     * <pre>
     ** Short selling mode 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
     */
    public int getShortModeValue() {
      return shortMode_;
    }
    /**
     * <pre>
     ** Short selling mode 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
     */
    public Builder setShortModeValue(int value) {
      shortMode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Short selling mode 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
     */
    public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode getShortMode() {
      @SuppressWarnings("deprecation")
      com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode result = com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.valueOf(shortMode_);
      return result == null ? com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     ** Short selling mode 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
     */
    public Builder setShortMode(com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo.ShortMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      shortMode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     ** Short selling mode 
     * </pre>
     *
     * <code>.com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo.ShortMode short_mode = 7;</code>
     */
    public Builder clearShortMode() {
      
      shortMode_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo)
  }

  // @@protoc_insertion_point(class_scope:com.consorsbank.module.tapi.grpc.SecurityStockExchangeInfo)
  private static final com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo();
  }

  public static com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SecurityStockExchangeInfo>
      PARSER = new com.google.protobuf.AbstractParser<SecurityStockExchangeInfo>() {
    @java.lang.Override
    public SecurityStockExchangeInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SecurityStockExchangeInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SecurityStockExchangeInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SecurityStockExchangeInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.consorsbank.module.tapi.grpc.security.SecurityStockExchangeInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

