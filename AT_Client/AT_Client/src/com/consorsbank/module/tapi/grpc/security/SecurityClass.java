// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SecurityService.proto

package com.consorsbank.module.tapi.grpc.security;

/**
 * <pre>
 **
 * Represents information about security class
 * </pre>
 *
 * Protobuf enum {@code com.consorsbank.module.tapi.grpc.SecurityClass}
 */
public enum SecurityClass
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   ** Security class is undefined on unknown 
   * </pre>
   *
   * <code>NO_SECURITY_CLASS = 0;</code>
   */
  NO_SECURITY_CLASS(0),
  /**
   * <pre>
   ** Stock security class 
   * </pre>
   *
   * <code>STOCK = 1;</code>
   */
  STOCK(1),
  /**
   * <pre>
   ** Bond security class 
   * </pre>
   *
   * <code>BOND = 2;</code>
   */
  BOND(2),
  /**
   * <pre>
   ** Certificate security class 
   * </pre>
   *
   * <code>CERTIFICATE = 3;</code>
   */
  CERTIFICATE(3),
  /**
   * <pre>
   ** Precious metal security class 
   * </pre>
   *
   * <code>PRECIOUS_METAL = 4;</code>
   */
  PRECIOUS_METAL(4),
  /**
   * <pre>
   ** Participation certificate security class 
   * </pre>
   *
   * <code>PARTICIPATION_CERTIFICATE = 5;</code>
   */
  PARTICIPATION_CERTIFICATE(5),
  /**
   * <pre>
   ** Funds security class 
   * </pre>
   *
   * <code>FUNDS = 6;</code>
   */
  FUNDS(6),
  /**
   * <pre>
   **  Mutual funds security class 
   * </pre>
   *
   * <code>MUTUAL_FUNDS = 7;</code>
   */
  MUTUAL_FUNDS(7),
  /**
   * <pre>
   ** Warrants security class 
   * </pre>
   *
   * <code>WARRANT = 8;</code>
   */
  WARRANT(8),
  /**
   * <pre>
   ** Futures security class 
   * </pre>
   *
   * <code>FUTURE = 9;</code>
   */
  FUTURE(9),
  /**
   * <pre>
   ** Indexies security class 
   * </pre>
   *
   * <code>INDEX = 10;</code>
   */
  INDEX(10),
  /**
   * <pre>
   ** Other securities security class 
   * </pre>
   *
   * <code>OTHERS = 11;</code>
   */
  OTHERS(11),
  /**
   * <pre>
   ** Future c1 security class 
   * </pre>
   *
   * <code>FUTURE_C1 = 12;</code>
   */
  FUTURE_C1(12),
  /**
   * <pre>
   ** Future c2 security class 
   * </pre>
   *
   * <code>FUTURE_C2 = 13;</code>
   */
  FUTURE_C2(13),
  /**
   * <pre>
   ** Future c3 security class 
   * </pre>
   *
   * <code>FUTURE_C3 = 14;</code>
   */
  FUTURE_C3(14),
  /**
   * <pre>
   ** Trackers security class 
   * </pre>
   *
   * <code>TRACKERS = 15;</code>
   */
  TRACKERS(15),
  /**
   * <pre>
   ** Currency security class 
   * </pre>
   *
   * <code>CURRENCY = 16;</code>
   */
  CURRENCY(16),
  /**
   * <pre>
   ** Commodity security class 
   * </pre>
   *
   * <code>COMMODITY = 17;</code>
   */
  COMMODITY(17),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   ** Security class is undefined on unknown 
   * </pre>
   *
   * <code>NO_SECURITY_CLASS = 0;</code>
   */
  public static final int NO_SECURITY_CLASS_VALUE = 0;
  /**
   * <pre>
   ** Stock security class 
   * </pre>
   *
   * <code>STOCK = 1;</code>
   */
  public static final int STOCK_VALUE = 1;
  /**
   * <pre>
   ** Bond security class 
   * </pre>
   *
   * <code>BOND = 2;</code>
   */
  public static final int BOND_VALUE = 2;
  /**
   * <pre>
   ** Certificate security class 
   * </pre>
   *
   * <code>CERTIFICATE = 3;</code>
   */
  public static final int CERTIFICATE_VALUE = 3;
  /**
   * <pre>
   ** Precious metal security class 
   * </pre>
   *
   * <code>PRECIOUS_METAL = 4;</code>
   */
  public static final int PRECIOUS_METAL_VALUE = 4;
  /**
   * <pre>
   ** Participation certificate security class 
   * </pre>
   *
   * <code>PARTICIPATION_CERTIFICATE = 5;</code>
   */
  public static final int PARTICIPATION_CERTIFICATE_VALUE = 5;
  /**
   * <pre>
   ** Funds security class 
   * </pre>
   *
   * <code>FUNDS = 6;</code>
   */
  public static final int FUNDS_VALUE = 6;
  /**
   * <pre>
   **  Mutual funds security class 
   * </pre>
   *
   * <code>MUTUAL_FUNDS = 7;</code>
   */
  public static final int MUTUAL_FUNDS_VALUE = 7;
  /**
   * <pre>
   ** Warrants security class 
   * </pre>
   *
   * <code>WARRANT = 8;</code>
   */
  public static final int WARRANT_VALUE = 8;
  /**
   * <pre>
   ** Futures security class 
   * </pre>
   *
   * <code>FUTURE = 9;</code>
   */
  public static final int FUTURE_VALUE = 9;
  /**
   * <pre>
   ** Indexies security class 
   * </pre>
   *
   * <code>INDEX = 10;</code>
   */
  public static final int INDEX_VALUE = 10;
  /**
   * <pre>
   ** Other securities security class 
   * </pre>
   *
   * <code>OTHERS = 11;</code>
   */
  public static final int OTHERS_VALUE = 11;
  /**
   * <pre>
   ** Future c1 security class 
   * </pre>
   *
   * <code>FUTURE_C1 = 12;</code>
   */
  public static final int FUTURE_C1_VALUE = 12;
  /**
   * <pre>
   ** Future c2 security class 
   * </pre>
   *
   * <code>FUTURE_C2 = 13;</code>
   */
  public static final int FUTURE_C2_VALUE = 13;
  /**
   * <pre>
   ** Future c3 security class 
   * </pre>
   *
   * <code>FUTURE_C3 = 14;</code>
   */
  public static final int FUTURE_C3_VALUE = 14;
  /**
   * <pre>
   ** Trackers security class 
   * </pre>
   *
   * <code>TRACKERS = 15;</code>
   */
  public static final int TRACKERS_VALUE = 15;
  /**
   * <pre>
   ** Currency security class 
   * </pre>
   *
   * <code>CURRENCY = 16;</code>
   */
  public static final int CURRENCY_VALUE = 16;
  /**
   * <pre>
   ** Commodity security class 
   * </pre>
   *
   * <code>COMMODITY = 17;</code>
   */
  public static final int COMMODITY_VALUE = 17;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static SecurityClass valueOf(int value) {
    return forNumber(value);
  }

  public static SecurityClass forNumber(int value) {
    switch (value) {
      case 0: return NO_SECURITY_CLASS;
      case 1: return STOCK;
      case 2: return BOND;
      case 3: return CERTIFICATE;
      case 4: return PRECIOUS_METAL;
      case 5: return PARTICIPATION_CERTIFICATE;
      case 6: return FUNDS;
      case 7: return MUTUAL_FUNDS;
      case 8: return WARRANT;
      case 9: return FUTURE;
      case 10: return INDEX;
      case 11: return OTHERS;
      case 12: return FUTURE_C1;
      case 13: return FUTURE_C2;
      case 14: return FUTURE_C3;
      case 15: return TRACKERS;
      case 16: return CURRENCY;
      case 17: return COMMODITY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<SecurityClass>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      SecurityClass> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<SecurityClass>() {
          public SecurityClass findValueByNumber(int number) {
            return SecurityClass.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.consorsbank.module.tapi.grpc.security.SecurityService.getDescriptor().getEnumTypes().get(2);
  }

  private static final SecurityClass[] VALUES = values();

  public static SecurityClass valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private SecurityClass(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.consorsbank.module.tapi.grpc.SecurityClass)
}

